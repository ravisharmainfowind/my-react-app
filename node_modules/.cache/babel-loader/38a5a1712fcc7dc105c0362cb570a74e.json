{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/my-app/src/components/multiple-image-upload/multiple-image-upload.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../../constants/apiConstants';\nimport { withRouter, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MultipleImageUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.fileObj = [];\n    this.fileArray = [];\n    this.state = {\n      file: [null],\n      successMessage: ''\n    };\n    this.uploadMultipleFiles = this.uploadMultipleFiles.bind(this);\n    this.uploadFiles = this.uploadFiles.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  uploadMultipleFiles(e) {\n    this.fileObj.push(e.target.files);\n\n    for (let i = 0; i < this.fileObj[0].length; i++) {\n      this.fileArray.push(URL.createObjectURL(this.fileObj[0][i]));\n    }\n\n    this.setState({\n      file: this.fileArray\n    });\n    console.log(this.fileArray);\n  }\n\n  uploadFiles(e) {\n    e.preventDefault();\n    console.log(this.state.file);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let self = this;\n    console.log(this.state.file); // Create an object of formData\n\n    const formData = new FormData();\n    debugger; //Update the formData object\n\n    formData.append(\"fileName[]\", this.state.file);\n    axios.post(API_BASE_URL + 'api/multiple-image-upload', formData).then(function (response) {\n      console.log(response);\n\n      if (response.status === 200) {\n        self.setState({\n          'successMessage': 'Employee successful Add...'\n        }); //self.handleClickEmp();\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group multi-preview\",\n        children: (this.fileArray || []).map(url => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: url,\n          alt: \"...\"\n        }, url, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control\",\n          name: \"fileName[]\",\n          onChange: this.uploadMultipleFiles,\n          multiple: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-danger btn-block\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(MultipleImageUpload);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/opt/lampp/htdocs/my-app/src/components/multiple-image-upload/multiple-image-upload.js"],"names":["React","Component","axios","API_BASE_URL","withRouter","Switch","Route","Link","MultipleImageUpload","constructor","props","fileObj","fileArray","state","file","successMessage","uploadMultipleFiles","bind","uploadFiles","handleSubmit","e","push","target","files","i","length","URL","createObjectURL","setState","console","log","preventDefault","event","self","formData","FormData","append","post","then","response","status","catch","error","render","map","url"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../../constants/apiConstants';\nimport { withRouter, Switch, Route, Link } from \"react-router-dom\";\n\n\n\nclass MultipleImageUpload extends Component {\n\n    fileObj = [];\n    fileArray = [];\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            file: [null],\n            successMessage:''\n        }\n        this.uploadMultipleFiles = this.uploadMultipleFiles.bind(this)\n        this.uploadFiles = this.uploadFiles.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    uploadMultipleFiles(e) {\n        \n        this.fileObj.push(e.target.files)\n        for (let i = 0; i < this.fileObj[0].length; i++) {\n            this.fileArray.push(URL.createObjectURL(this.fileObj[0][i]))\n        }\n        this.setState({ file: this.fileArray })\n        console.log(this.fileArray)\n    }\n\n    uploadFiles(e) {\n        e.preventDefault()\n        console.log(this.state.file)\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let self = this;\n        console.log(this.state.file);\n       \n          // Create an object of formData\n          const formData = new FormData();\n          debugger\n          //Update the formData object\n          formData.append(\"fileName[]\", this.state.file);\n    \n          axios.post(API_BASE_URL +'api/multiple-image-upload',formData)\n            .then(function (response) {\n              console.log(response)\n              if (response.status === 200) {\n                self.setState({ 'successMessage': 'Employee successful Add...' });\n                //self.handleClickEmp();\n              }\n            })\n            .catch(function (error) {\n              console.log(error);\n            });  \n      }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} encType=\"multipart/form-data\">\n                <div className=\"form-group multi-preview\">\n                    {(this.fileArray || []).map(url => (\n                        <img key={url} src={url} alt=\"...\" />\n                    ))}\n                </div>\n\n                <div className=\"form-group\">\n                    <input type=\"file\" className=\"form-control\" name=\"fileName[]\" onChange={this.uploadMultipleFiles} multiple />\n                </div>\n                <button type=\"submit\" className=\"btn btn-danger btn-block\" >Upload</button>\n            </form >\n        )\n    }\n}\nexport default withRouter(MultipleImageUpload);"]},"metadata":{},"sourceType":"module"}