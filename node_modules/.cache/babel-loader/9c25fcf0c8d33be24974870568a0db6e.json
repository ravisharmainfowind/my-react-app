{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //import App from './App';\n\nimport reportWebVitals from './reportWebVitals';\nimport Counter from './Counter'; //import Instructions from './Instructions';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  count: 0\n};\n\nfunction reducer(state = initialState, action) {\n  console.log(action);\n\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        count: state.count + 1\n      };\n\n    case 'DECREMENT':\n      return {\n        count: state.count - 1\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(reducer);\nstore.dispatch({\n  type: 'INCREMENT'\n});\nstore.dispatch({\n  type: 'DECREMENT'\n});\n\nconst App = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 3\n}, this); // ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 17\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/opt/lampp/htdocs/my-app/src/index.js"],"names":["React","ReactDOM","reportWebVitals","Counter","createStore","Provider","initialState","count","reducer","state","action","console","log","type","store","dispatch","App","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CACA;;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;;AAIA,SAASC,OAAT,CAAiBC,KAAK,GAAGH,YAAzB,EAAuCI,MAAvC,EAA+C;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAOA,MAAM,CAACG,IAAd;AACE,SAAK,WAAL;AACE,aAAO;AACLN,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AADhB,OAAP;;AAGF,SAAK,WAAL;AACE,aAAO;AACLA,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AADhB,OAAP;;AAGF;AACE,aAAOE,KAAP;AAVJ;AAYD;;AAED,MAAMK,KAAK,GAAGV,WAAW,CAACI,OAAD,CAAzB;AAEAM,KAAK,CAACC,QAAN,CAAe;AAACF,EAAAA,IAAI,EAAG;AAAR,CAAf;AACAC,KAAK,CAACC,QAAN,CAAe;AAACF,EAAAA,IAAI,EAAG;AAAR,CAAf;;AAEA,MAAMG,GAAG,GAAG,mBACV;AAAA,yBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEF,KAAjB;AAAA,2BACA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,C,CAQA;AACA;AACA;AACA;AACA;AACA;;;KAbME,G;AAeNf,QAAQ,CAACgB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACAjB,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Counter from './Counter';\n//import Instructions from './Instructions';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nconst initialState = {\n  count: 0\n};\n\nfunction reducer(state = initialState, action) {\n  console.log(action);\n  switch(action.type) {\n    case 'INCREMENT':\n      return {\n        count: state.count + 1\n      };\n    case 'DECREMENT':\n      return {\n        count: state.count - 1\n      };\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(reducer);\n\nstore.dispatch({type : 'INCREMENT'});\nstore.dispatch({type : 'DECREMENT'});\n\nconst App = () => (\n  <div>\n    <Provider store={store}>\n    <Counter/>\n  </Provider>\n  </div>\n);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}