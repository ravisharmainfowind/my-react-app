{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/my-app/src/components/DataGrid/DataGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-enterprise';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { API_BASE_URL } from '../../constants/apiConstants';\nimport { Form, Modal, Button, ButtonGroup, Input, Image } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DataGrid = () => {\n  _s();\n\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n  const [rowData, setRowData] = useState([]);\n  const [employees, setEmployees] = useState(null);\n  const [state, setState] = useState({\n    email: \"\",\n    employee_name: \"\",\n    employee_salary: \"\",\n    employee_age: \"\",\n    mobile_number: \"\",\n    date: \"\",\n    gender: \"\",\n    address: \"\",\n    profile_image: \"\",\n    image_path: \"\",\n    id: \"\"\n  });\n  const [showModal, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = e => {\n    setShow(true);\n    let self = this;\n    const selectedNodes = gridApi.getSelectedNodes();\n    const selectedData = selectedNodes.map(node => node.data);\n    const selectedDataStringPresentation = selectedData.map(employeeData => {\n      //console.log(employeeData.id)\n      state.id = employeeData.id;\n      state.employee_name = employeeData.employee_name;\n      state.employee_salary = employeeData.employee_salary;\n      state.employee_age = employeeData.employee_age;\n      state.email = employeeData.email;\n      state.mobile_number = employeeData.mobile_number;\n      state.address = employeeData.address;\n      state.gender = employeeData.gender;\n      state.date = employeeData.date;\n      state.profile_image = employeeData.profile_image;\n      state.image_path = employeeData.profile_image;\n    });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    //console.log(data);\n    //event.preventDefault();\n    // Create an object of formData\n    const formData = new FormData();\n    let self = this;\n    const payload = {\n      \"employee_name\": state.employee_name,\n      \"employee_age\": state.employee_age,\n      \"employee_salary\": state.employee_salary,\n      \"email\": state.email,\n      \"mobile_number\": state.mobile_number,\n      \"address\": state.address,\n      \"gender\": state.gender,\n      \"profile_image\": formData.append(\"profile_image\", state.profile_image),\n      \"date\": state.date\n    };\n    console.log(state.profile_image); // let header = {\n    //    'Content-Type': 'multipart/form-data',\n    //    'Access-Control-Allow-Origin': '*',\n    //  };\n    //   const config = {\n    //     headers: {\n    //         \"Access-Control-Allow-Origin\" : \"*\",\n    //         \"Allow\": \"POST\",\n    //         \"Content-type\": \"multipart/form-data\",    \n    //     }\n    // };\n    //debugger\n    //Update the formData object\n\n    formData.append(\"profile_image\", state.profile_image);\n    formData.append(\"employee_name\", state.employee_name);\n    formData.append(\"employee_salary\", state.employee_salary);\n    formData.append(\"employee_age\", state.employee_age);\n    formData.append(\"mobile_number\", state.mobile_number);\n    formData.append(\"gender\", state.gender);\n    formData.append(\"address\", state.address);\n    formData.append(\"email\", state.email);\n    formData.append(\"date\", state.date);\n    console.log(formData);\n    axios.put(API_BASE_URL + 'api/employees/' + state.id, payload).then(function (response) {\n      console.log(response);\n\n      if (response.status === 200) {//window.location.reload();\n        //self.setState({'successMessage' : 'Employee successful Edit...'});\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const onGridReady = params => {\n    setGridApi(params.api);\n    setGridColumnApi(params.columnApi);\n\n    const updateData = data => {\n      setRowData(data);\n    }; //fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\n\n\n    fetch(API_BASE_URL + 'api/employees').then(resp => resp.json()).then(data => updateData(data));\n  }; // useEffect(() => {\n  //     fetch('https://www.ag-grid.com/example-assets/row-data.json')\n  //     .then(result => result.json())\n  //     .then(rowData => setRowData(rowData))\n  // }, []);\n\n\n  const onButtonClick = e => {\n    const selectedNodes = gridApi.getSelectedNodes();\n    const selectedData = selectedNodes.map(node => node.data);\n    const selectedDataStringPresentation = selectedData.map(node => `${node.employee_name} ${node.employee_age}`).join(', ');\n    alert(`Selected nodes: ${selectedDataStringPresentation}`);\n  };\n\n  const onDeleteClick = e => {\n    let self = this;\n    const selectedNodes = gridApi.getSelectedNodes();\n    const selectedData = selectedNodes.map(node => node.data);\n    const selectedDataStringPresentation = selectedData.map(employeeData => {\n      console.log(employeeData.id);\n      let id = employeeData.id;\n      axios.delete(API_BASE_URL + 'api/employees/' + id).then(function (response) {\n        if (response.status === 202) {\n          window.location.reload();\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (e.target.name === \"profile_image\") {\n      setState(prevState => ({ ...prevState,\n        profile_image: e.target.files[0]\n      })); //console.log(state.profile_image)\n    } else {\n      setState(prevState => ({ ...prevState,\n        [name]: value\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-alpine\",\n      style: {\n        height: 600,\n        width: 1040\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: onButtonClick,\n        children: \"Get selected rows\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: onDeleteClick,\n        children: \"Delete Rows\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: handleShow,\n        children: \"Edit Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AgGridReact, {\n        rowSelection: \"multiple\",\n        defaultColDef: {\n          width: 150,\n          editable: true,\n          filter: 'agTextColumnFilter',\n          floatingFilter: true,\n          resizable: true\n        },\n        defaultColGroupDef: {\n          marryChildren: true\n        },\n        columnTypes: {\n          numberColumn: {\n            width: 130,\n            filter: 'agNumberColumnFilter'\n          },\n          medalColumn: {\n            width: 100,\n            columnGroupShow: 'open',\n            filter: false\n          },\n          nonEditableColumn: {\n            editable: false\n          },\n          dateColumn: {\n            filter: 'agDateColumnFilter',\n            filterParams: {\n              comparator: function (filterLocalDateAtMidnight, cellValue) {\n                var dateParts = cellValue.split('/');\n                var day = Number(dateParts[0]);\n                var month = Number(dateParts[1]) - 1;\n                var year = Number(dateParts[2]);\n                var cellDate = new Date(year, month, day);\n\n                if (cellDate < filterLocalDateAtMidnight) {\n                  return -1;\n                } else if (cellDate > filterLocalDateAtMidnight) {\n                  return 1;\n                } else {\n                  return 0;\n                }\n              }\n            }\n          }\n        },\n        rowData: rowData,\n        onGridReady: onGridReady,\n        children: [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n          headerName: \"Employee Name\",\n          field: \"employee_name\",\n          checkboxSelection: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n          headerName: \"Mobile No.\",\n          field: \"mobile_number\",\n          type: \"numberColumn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n          headerName: \"Employee Age\",\n          field: \"employee_age\",\n          type: \"numberColumn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n          headerName: \"Email\",\n          field: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n          headerName: \"Date\",\n          field: \"date\",\n          type: ['dateColumn', 'nonEditableColumn'],\n          width: 220\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Employee Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(onSubmit),\n          encType: \"multipart/form-data\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Employee Name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              onChange: handleChange,\n              value: state.employee_name,\n              name: \"employee_name\",\n              placeholder: \"Employee Name\",\n              ref: register({\n                required: true,\n                minLength: 2\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), errors.employee_name && errors.employee_name.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: \"This is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 85\n            }, this), errors.employee_name && errors.employee_name.type === \"minLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: \"This is field required min length of 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 88\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Employee Salary: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              onChange: handleChange,\n              value: state.employee_salary,\n              name: \"employee_salary\",\n              placeholder: \"Employee Salary\",\n              ref: register({\n                required: true,\n                pattern: /\\d+/\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), errors.employee_salary && errors.employee_salary.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: \"This is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 89\n            }, this), errors.employee_salary && errors.employee_salary.type === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: \"Please enter digits for Salary.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 88\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Employee Age: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              onChange: handleChange,\n              value: state.employee_age,\n              name: \"employee_age\",\n              placeholder: \"Employee Age\",\n              ref: register({\n                required: true,\n                pattern: /\\d+/\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), errors.employee_age && errors.employee_age.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: \"This is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 83\n            }, this), errors.employee_age && errors.employee_age.type === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: \"Please enter number for age.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 82\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Employee Email: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              onChange: handleChange,\n              value: state.email,\n              name: \"email\",\n              placeholder: \"Employee Age\",\n              ref: register({\n                required: true,\n                pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                maxLength: 50\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), errors.email && errors.email.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: \"This is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 69\n            }, this), errors.email && errors.email.type === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: \"Please enter valid email.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 68\n            }, this), errors.email && errors.email.type === \"maxLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: \"This is field required max length of 50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            onChange: handleChange,\n            ref: register({\n              required: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Gender: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: [\"Male\", /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"radio\",\n                  name: \"gender\",\n                  value: \"male\",\n                  checked: state.gender === 'male',\n                  ref: register\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: [\"Female\", /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"radio\",\n                  name: \"gender\",\n                  checked: state.gender === 'female',\n                  value: \"female\",\n                  ref: register\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 11\n            }, this), errors.gender && errors.gender.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: \"This is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 65\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Mobile No.: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              onChange: handleChange,\n              value: state.mobile_number,\n              name: \"mobile_number\",\n              placeholder: \"mobile number\",\n              ref: register({\n                required: true,\n                pattern: /\\d+/,\n                maxLength: 13,\n                minLength: 7\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), errors.mobile_number && errors.mobile_number.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: \"This is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 85\n            }, this), errors.mobile_number && errors.mobile_number.type === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: \"Please enter valid mobile number(only digits).\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 84\n            }, this), errors.mobile_number && errors.mobile_number.type === \"maxLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: \"This is field required max length of 13\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 86\n            }, this), errors.mobile_number && errors.mobile_number.type === \"minLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: \"This is field required min length of 7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 86\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Date of Birth: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              onChange: handleChange,\n              value: state.date,\n              selected: state.date,\n              name: \"date\",\n              placeholder: \"Date of Birth\",\n              ref: register({\n                required: true,\n                pattern: /^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), errors.date && errors.date.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: \"This is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 67\n            }, this), errors.date && errors.date.type === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: \"Please enter valid Date of Birth.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 66\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Address: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              onChange: handleChange,\n              value: state.address,\n              name: \"address\",\n              placeholder: \"Address\",\n              ref: register({\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this), errors.address && errors.address.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: \"This is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 73\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              htmlFor: \"title\",\n              children: \"Profile Image:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              autoComplete: \"off\",\n              name: \"profile_image\",\n              id: \"profile_image\",\n              onChange: handleChange //ref={register({ required: true })}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 13\n            }, this), errors.profile_image && errors.profile_image.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: \"This is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 83\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: state.image_path != null ? /*#__PURE__*/_jsxDEV(Image, {\n              src: `http://localhost/laravel-jwt-auth/public/profile_image/${state.profile_image}`,\n              style: {\n                height: \"75px\",\n                width: \"75px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 39\n            }, this) : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DataGrid, \"D7RHzgVlE44SATfINFm46AJ0azs=\", false, function () {\n  return [useForm];\n});\n\n_c = DataGrid;\nexport default DataGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataGrid\");","map":{"version":3,"sources":["/opt/lampp/htdocs/my-app/src/components/DataGrid/DataGrid.js"],"names":["React","useState","useEffect","axios","useForm","AgGridColumn","AgGridReact","API_BASE_URL","Form","Modal","Button","ButtonGroup","Input","Image","DataGrid","gridApi","setGridApi","gridColumnApi","setGridColumnApi","rowData","setRowData","employees","setEmployees","state","setState","email","employee_name","employee_salary","employee_age","mobile_number","date","gender","address","profile_image","image_path","id","showModal","setShow","handleClose","handleShow","e","self","selectedNodes","getSelectedNodes","selectedData","map","node","data","selectedDataStringPresentation","employeeData","register","handleSubmit","errors","onSubmit","formData","FormData","payload","append","console","log","put","then","response","status","catch","error","onGridReady","params","api","columnApi","updateData","fetch","resp","json","onButtonClick","join","alert","onDeleteClick","delete","window","location","reload","handleChange","name","value","target","prevState","files","height","width","editable","filter","floatingFilter","resizable","marryChildren","numberColumn","medalColumn","columnGroupShow","nonEditableColumn","dateColumn","filterParams","comparator","filterLocalDateAtMidnight","cellValue","dateParts","split","day","Number","month","year","cellDate","Date","required","minLength","type","pattern","maxLength"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-enterprise';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport {API_BASE_URL } from '../../constants/apiConstants';\nimport { Form,Modal,Button,ButtonGroup,Input,Image} from \"react-bootstrap\";\n\nconst DataGrid = () => {\n    const [gridApi, setGridApi] = useState(null);\n    const [gridColumnApi, setGridColumnApi] = useState(null);\n    const [rowData, setRowData] = useState([]);\n    const [employees, setEmployees] = useState(null);\n    const [state , setState] = useState({\n      email : \"\",\n      employee_name : \"\",\n      employee_salary : \"\",\n      employee_age : \"\",\n      mobile_number : \"\",\n      date: \"\",\n      gender: \"\",\n      address:\"\",\n      profile_image:\"\",\n      image_path:\"\",\n      id:\"\"\n  })\n    const [showModal, setShow] = useState(false);\n    \n    const handleClose = () => setShow(false);\n\n    const handleShow = e => {\n       setShow(true)\n       let self =this;\n        const selectedNodes = gridApi.getSelectedNodes()\n        const selectedData = selectedNodes.map( node => node.data )\n        const selectedDataStringPresentation = selectedData.map((employeeData)=>{\n          //console.log(employeeData.id)\n          state.id              = employeeData.id;\n          state.employee_name   = employeeData.employee_name;\n          state.employee_salary = employeeData.employee_salary;\n          state.employee_age    = employeeData.employee_age;\n          state.email           = employeeData.email;\n          state.mobile_number   = employeeData.mobile_number;\n          state.address         = employeeData.address;\n          state.gender          = employeeData.gender;\n          state.date            = employeeData.date;\n          state.profile_image   = employeeData.profile_image;\n          state.image_path      = employeeData.profile_image;        \n        })     \n    };\n    \n    \n\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = (data) => {\n    //console.log(data);\n    //event.preventDefault();\n    // Create an object of formData\n    const formData = new FormData();\n    let self = this;\n    const payload={\n      \"employee_name\":state.employee_name,\n      \"employee_age\":state.employee_age,\n      \"employee_salary\":state.employee_salary,\n      \"email\":state.email,\n      \"mobile_number\":state.mobile_number,\n      \"address\":state.address,\n      \"gender\":state.gender,\n      \"profile_image\":formData.append(\"profile_image\", state.profile_image),\n      \"date\":state.date,\n    }\n    console.log(state.profile_image)\n      // let header = {\n      //    'Content-Type': 'multipart/form-data',\n      //    'Access-Control-Allow-Origin': '*',\n      //  };\n      //   const config = {\n      //     headers: {\n      //         \"Access-Control-Allow-Origin\" : \"*\",\n      //         \"Allow\": \"POST\",\n      //         \"Content-type\": \"multipart/form-data\",    \n      //     }\n      // };\n      //debugger\n    \n     //Update the formData object\n      formData.append(\"profile_image\", state.profile_image);\n      formData.append(\"employee_name\", state.employee_name);\n      formData.append(\"employee_salary\", state.employee_salary);\n      formData.append(\"employee_age\", state.employee_age);\n      formData.append(\"mobile_number\", state.mobile_number);\n      formData.append(\"gender\", state.gender);\n      formData.append(\"address\", state.address);\n      formData.append(\"email\", state.email);\n      formData.append(\"date\", state.date);\n\n      console.log(formData)\n\n    axios.put(API_BASE_URL+'api/employees/'+state.id, payload)\n      .then(function (response) {\n          console.log(response)\n          if(response.status === 200){\n            //window.location.reload();\n              //self.setState({'successMessage' : 'Employee successful Edit...'});\n                  \n          }\n      })\n      .catch(function (error) {\n          console.log(error);\n      });\n  };\n   \n    const onGridReady = (params) => {\n        setGridApi(params.api);\n        setGridColumnApi(params.columnApi);\n    \n        const updateData = (data) => {\n          setRowData(data);\n        };\n        //fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\n         fetch(API_BASE_URL+'api/employees')\n        .then((resp) => resp.json())\n        .then((data) => updateData(data));\n    };    \n\n    // useEffect(() => {\n    //     fetch('https://www.ag-grid.com/example-assets/row-data.json')\n    //     .then(result => result.json())\n    //     .then(rowData => setRowData(rowData))\n    // }, []);\n\n    const onButtonClick = e => {\n        const selectedNodes = gridApi.getSelectedNodes()\n        const selectedData = selectedNodes.map( node => node.data )\n        const selectedDataStringPresentation = selectedData.map( node => `${node.employee_name} ${node.employee_age}`).join(', ')\n        alert(`Selected nodes: ${selectedDataStringPresentation}`)\n    }\n\n    const onDeleteClick = e => {\n        let self =this;\n        const selectedNodes = gridApi.getSelectedNodes()\n        const selectedData = selectedNodes.map( node => node.data )\n        const selectedDataStringPresentation = selectedData.map((employeeData)=>{\n            console.log(employeeData.id)\n            let id = employeeData.id;\n             axios.delete(API_BASE_URL+'api/employees/'+id)\n             .then(function (response) {\n                 if(response.status === 202){\n                     window.location.reload(); \n                 } \n             })\n             .catch(function (error) {\n                 console.log(error);\n             });\n        });\n    } \n\n    const handleChange = (e) => {\n      const {name , value} = e.target\n      if (e.target.name === \"profile_image\") { \n        setState(prevState => ({\n          ...prevState,\n          profile_image : e.target.files[0]\n      }))\n        //console.log(state.profile_image)\n      } else { \n      setState(prevState => ({\n          ...prevState,\n          [name] : value\n      }))\n      }\n    }\n\n    return (<>\n        <div className=\"ag-theme-alpine\" style={{ height: 600, width: 1040 }}>\n            <button className=\"btn btn-primary\" onClick={onButtonClick}>Get selected rows</button>\n            <button className=\"btn btn-danger\" onClick={onDeleteClick}>Delete Rows</button>\n            <button className=\"btn btn-warning\" onClick={handleShow}>Edit Row</button>\n            <AgGridReact\n            rowSelection=\"multiple\"\n            defaultColDef={{\n              width: 150,\n              editable: true,\n              filter: 'agTextColumnFilter',\n              floatingFilter: true,\n              resizable: true,\n            }}\n            defaultColGroupDef={{ marryChildren: true }}\n            columnTypes={{\n              numberColumn: {\n                width: 130,\n                filter: 'agNumberColumnFilter',\n              },\n              medalColumn: {\n                width: 100,\n                columnGroupShow: 'open',\n                filter: false,\n              },\n              nonEditableColumn: { editable: false },\n              dateColumn: {\n                filter: 'agDateColumnFilter',\n                filterParams: {\n                  comparator: function (filterLocalDateAtMidnight, cellValue) {\n                    var dateParts = cellValue.split('/');\n                    var day = Number(dateParts[0]);\n                    var month = Number(dateParts[1]) - 1;\n                    var year = Number(dateParts[2]);\n                    var cellDate = new Date(year, month, day);\n                    if (cellDate < filterLocalDateAtMidnight) {\n                      return -1;\n                    } else if (cellDate > filterLocalDateAtMidnight) {\n                      return 1;\n                    } else {\n                      return 0;\n                    }\n                  },\n                },\n              },\n            }}\n            rowData={rowData}\n            onGridReady={onGridReady}\n          >\n            <AgGridColumn headerName=\"Employee Name\" field=\"employee_name\" checkboxSelection={ true }/>\n            <AgGridColumn headerName=\"Mobile No.\" field=\"mobile_number\" type=\"numberColumn\"/>\n            <AgGridColumn headerName=\"Employee Age\" field=\"employee_age\" type=\"numberColumn\" />\n            <AgGridColumn headerName=\"Email\" field=\"email\" />\n            <AgGridColumn\n              headerName=\"Date\"\n              field=\"date\"\n              type={['dateColumn', 'nonEditableColumn']}\n              width={220}\n            />\n            \n            {/* <AgGridColumn headerName=\"Medals\" groupId=\"medalsGroup\">\n              <AgGridColumn headerName=\"Gold\" field=\"gold\" type=\"medalColumn\" />\n              <AgGridColumn\n                headerName=\"Silver\"\n                field=\"silver\"\n                type=\"medalColumn\"\n              />\n              <AgGridColumn\n                headerName=\"Bronze\"\n                field=\"bronze\"\n                type=\"medalColumn\"\n              />\n              <AgGridColumn\n                headerName=\"Total\"\n                field=\"total\"\n                type=\"medalColumn\"\n                columnGroupShow=\"closed\"\n              />\n            </AgGridColumn> */}\n          </AgGridReact>\n        </div>\n\n       <Modal show={showModal} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Employee Data</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n           <Form onSubmit={handleSubmit(onSubmit)} encType=\"multipart/form-data\">\n           <Form.Group>\n              <Form.Label>Employee Name: </Form.Label>\n              <Form.Control type=\"text\" onChange={handleChange} value={state.employee_name} name=\"employee_name\" placeholder=\"Employee Name\" ref={register({required:true,minLength:2})}/> \n              {errors.employee_name && errors.employee_name.type === \"required\" && (<p className=\"error\">This is required</p>)}\n                {errors.employee_name && errors.employee_name.type === \"minLength\" && (<p className=\"error\">This is field required min length of 2</p>)}          \n          </Form.Group>\n          <Form.Group>\n              <Form.Label>Employee Salary: </Form.Label>\n              <Form.Control type=\"text\" onChange={handleChange} value={state.employee_salary} name=\"employee_salary\" placeholder=\"Employee Salary\" ref={register({required:true,pattern: /\\d+/})}/> \n              {errors.employee_salary && errors.employee_salary.type === \"required\" && (<p className=\"error\">This is required</p>)} \n              {errors.employee_salary && errors.employee_salary.type === \"pattern\" && (<p className=\"error\">Please enter digits for Salary.</p>)}            \n          </Form.Group>\n         \n          <Form.Group>\n              <Form.Label>Employee Age: </Form.Label>\n              <Form.Control type=\"text\" onChange={handleChange} value={state.employee_age} name=\"employee_age\" placeholder=\"Employee Age\"  ref={register({ required:true,pattern: /\\d+/ })}/> \n              {errors.employee_age && errors.employee_age.type === \"required\" && (<p className=\"error\">This is required</p>)}\n              {errors.employee_age && errors.employee_age.type === \"pattern\" && (<p className=\"error\">Please enter number for age.</p>)}            \n          </Form.Group>\n\n          <Form.Group>\n              <Form.Label>Employee Email: </Form.Label>\n              <Form.Control type=\"text\" onChange={handleChange} value={state.email} name=\"email\" placeholder=\"Employee Age\"  ref={register({ required: true, pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,maxLength: 50 })}/> \n              {errors.email && errors.email.type === \"required\" && (<p className=\"error\">This is required</p>)}\n              {errors.email && errors.email.type === \"pattern\" && (<p className=\"error\">Please enter valid email.</p>)}\n              {errors.email && errors.email.type === \"maxLength\" && (<p className=\"error\">This is field required max length of 50</p>)}            \n          </Form.Group>\n          \n          <Form.Group onChange={handleChange} ref={register({ required:true })}>\n          <ButtonGroup>\n          <Form.Label>Gender: </Form.Label>\n          <Form.Label >Male\n            <Form.Control type=\"radio\" name=\"gender\" value='male' checked={state.gender === 'male'} ref={register}/>\n          </Form.Label>\n          <Form.Label>Female\n            <Form.Control type=\"radio\" name=\"gender\" checked={state.gender === 'female'} value='female' ref={register}/>\n          </Form.Label>\n        </ButtonGroup>\n        {errors.gender && errors.gender.type === \"required\" && (<p className=\"error\">This is required</p>)}\n        </Form.Group>\n\n         <Form.Group>\n              <Form.Label>Mobile No.: </Form.Label>\n              <Form.Control type=\"text\" onChange={handleChange} value={state.mobile_number} name=\"mobile_number\" placeholder=\"mobile number\"  ref={register({ required: true, pattern: /\\d+/,maxLength: 13,minLength:7 })}/> \n              {errors.mobile_number && errors.mobile_number.type === \"required\" && (<p className=\"error\">This is required</p>)}\n              {errors.mobile_number && errors.mobile_number.type === \"pattern\" && (<p className=\"error\">Please enter valid mobile number(only digits).</p>)}\n              {errors.mobile_number && errors.mobile_number.type === \"maxLength\" && (<p className=\"error\">This is field required max length of 13</p>)}\n              {errors.mobile_number && errors.mobile_number.type === \"minLength\" && (<p className=\"error\">This is field required min length of 7</p>)}            \n          </Form.Group>\n\n          <Form.Group>\n              <Form.Label>Date of Birth: </Form.Label>\n              <Form.Control type=\"date\" onChange={handleChange} value={state.date} selected={state.date} name=\"date\" placeholder=\"Date of Birth\"  ref={register({ required: true, pattern: /^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/ })}/> \n              {errors.date && errors.date.type === \"required\" && (<p className=\"error\">This is required</p>)}\n              {errors.date && errors.date.type === \"pattern\" && (<p className=\"error\">Please enter valid Date of Birth.</p>)}                \n          </Form.Group>\n\n          <Form.Group>\n              <Form.Label>Address: </Form.Label>\n              <Form.Control type=\"text\" onChange={handleChange} value={state.address} name=\"address\" placeholder=\"Address\"  ref={register({ required: true })}/> \n              {errors.address && errors.address.type === \"required\" && (<p className=\"error\">This is required</p>)}               \n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label htmlFor=\"title\">Profile Image:</Form.Label>\n            <Form.Control\n              type=\"file\"\n              autoComplete=\"off\"\n              name=\"profile_image\"\n              id=\"profile_image\"\n              onChange={handleChange}\n              //ref={register({ required: true })}\n            />\n            {errors.profile_image && errors.profile_image.type === \"required\" && (<p className=\"error\">This is required</p>)} \n          </Form.Group>\n\n          <div className=\"col-md-4\">\n            {(state.image_path!=null)?<Image src={`http://localhost/laravel-jwt-auth/public/profile_image/${state.profile_image}`} style={{ height:\"75px\",width:\"75px\"}}/>:''}\n          </div><br/>\n         \n          <Button variant=\"primary\" type=\"submit\">\n              Submit\n          </Button>\n          </Form> \n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            \n          </Modal.Footer>\n        </Modal>\n        </>\n    );\n};\n\nexport default DataGrid;"]},"metadata":{},"sourceType":"module"}