{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/my-app/src/components/multiple-image-upload/multiple-image-upload.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../../constants/apiConstants';\nimport { withRouter, Switch, Route, Link } from \"react-router-dom\";\nimport { Service } from '../../services/Service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MultipleImageUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.fileObj = [];\n    this.fileArray = [];\n    this.fileArrayUrl = [];\n    this.state = {\n      file: [null],\n      files: [],\n      successMessage: '',\n      input: {},\n      formData: {},\n      errors: {}\n    };\n    this.uploadMultipleFiles = this.uploadMultipleFiles.bind(this);\n    this.uploadFiles = this.uploadFiles.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this); //this.handleSubmitChange = this.handleSubmitChange.bind(this)\n  }\n\n  imageValidate() {\n    let input = this.state.input;\n    let errors = {};\n    let isValid = true; //debugger\n\n    if (!input[\"profile_image\"]) {\n      isValid = false;\n      errors[\"profile_image\"] = \"Please select image.\";\n    }\n\n    if (typeof input[\"profile_image\"] !== \"undefined\") {\n      //debugger\n      let imageSize = input[\"profile_image\"].size;\n\n      if (!input[\"profile_image\"].name.match(/\\.(jpg|jpeg|png|gif)$/)) {\n        isValid = false;\n        errors[\"profile_image\"] = \"Please select valid image(like jpg|jpeg|png|gif).\";\n      } else if (imageSize > 1048576) {\n        isValid = false;\n        errors[\"profile_image\"] = \"Image size less than 1 MB.\";\n      }\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return isValid;\n  }\n\n  uploadMultipleFiles(e) {\n    this.fileArray = [];\n    this.fileArrayUrl = [];\n    let input = this.state.input;\n    let errors = this.state.errors;\n    input[e.target.name] = e.target.files[0];\n    this.setState({\n      input\n    });\n    this.fileObj.push(e.target.files);\n\n    if (e.target.files.length != 0) {\n      for (let i = 0; i < this.fileObj.length; i++) {\n        this.fileArrayUrl.push(URL.createObjectURL(this.fileObj[i][0]));\n        this.fileArray.push(this.fileObj[i][0]);\n\n        for (let j = 0; j < this.fileObj[i].length; j++) {\n          //console.log(this.fileObj[i][j])\n          this.fileArray.push(this.fileObj[i][j]);\n        }\n      }\n\n      this.setState({\n        file: this.fileArray\n      });\n    }\n  }\n\n  uploadFiles(e) {\n    e.preventDefault();\n    console.log(this.state.file);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let self = this;\n    document.getElementById('file').value = null;\n    let image_value = document.getElementById('file').value;\n    let data = this.state.file; // Create an object of formData\n\n    const formData = new FormData();\n\n    for (let i = 0; i < data.length; i++) {\n      //Update the formData object\n      formData.append(\"fileName[]\", data[i]);\n    }\n\n    let header = {\n      \"Content-Type\": \"multipart/form-data\",\n      \"Access-Control-Allow-Origin\": \"*\"\n    }; //  Service.post({\n    //     url: 'api/multiple-image-upload',\n    //     body: formData,\n    //     header : header\n    //   })\n    //   .then(response => {\n    //       console.log(response)\n    //     let data = response;\n    //       if(data) {\n    //         self.setState({ successMessage: 'Images successful Add...' });\n    //         console.log(self.state.successMessage)\n    //       }  \n    //   })\n    //   .catch(err => {\n    //      //console.log(err)\n    //   });\n\n    axios.post(API_BASE_URL + 'api/multiple-image-upload', formData).then(function (response) {\n      console.log(response);\n\n      if (response.status === 200) {\n        self.setState({\n          'successMessage': 'Images successful Add...'\n        }); //self.handleClickEmp();\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.state.successMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        role: \"alert\",\n        children: this.state.successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 43\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        encType: \"multipart/form-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group multi-preview\",\n          children: (this.fileArrayUrl || []).map(url => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: url,\n            alt: \"...\",\n            style: {\n              height: 70,\n              width: 70\n            }\n          }, url, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"file\",\n            className: \"form-control\",\n            name: \"fileName[]\",\n            onClick: event => {\n              event.target.files = null;\n            },\n            onChange: this.uploadMultipleFiles,\n            multiple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: this.state.errors.profile_image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-danger btn-block\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _c = withRouter(MultipleImageUpload);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/opt/lampp/htdocs/my-app/src/components/multiple-image-upload/multiple-image-upload.js"],"names":["React","Component","axios","API_BASE_URL","withRouter","Switch","Route","Link","Service","MultipleImageUpload","constructor","props","fileObj","fileArray","fileArrayUrl","state","file","files","successMessage","input","formData","errors","uploadMultipleFiles","bind","uploadFiles","handleSubmit","imageValidate","isValid","imageSize","size","name","match","setState","e","target","push","length","i","URL","createObjectURL","j","preventDefault","console","log","event","self","document","getElementById","value","image_value","data","FormData","append","header","post","then","response","status","catch","error","render","map","url","height","width","profile_image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../../constants/apiConstants';\nimport { withRouter, Switch, Route, Link } from \"react-router-dom\";\nimport { Service } from '../../services/Service';\n\nclass MultipleImageUpload extends Component {\n\n    fileObj = [];\n    fileArray = [];\n    fileArrayUrl = [];\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            file: [null],\n            files: [],\n            successMessage: '',\n            input: {},\n            formData: {},\n            errors: {}\n        }\n        this.uploadMultipleFiles = this.uploadMultipleFiles.bind(this)\n        this.uploadFiles = this.uploadFiles.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        //this.handleSubmitChange = this.handleSubmitChange.bind(this)\n    }\n\n    imageValidate() {\n        let input = this.state.input;\n        let errors = {};\n        let isValid = true;\n        //debugger\n        if (!input[\"profile_image\"]) {\n          isValid = false;\n          errors[\"profile_image\"] = \"Please select image.\";\n        }\n    \n        if (typeof input[\"profile_image\"] !== \"undefined\") {\n          //debugger\n          let imageSize = input[\"profile_image\"].size;\n          if (!input[\"profile_image\"].name.match(/\\.(jpg|jpeg|png|gif)$/)) {\n            isValid = false;\n            errors[\"profile_image\"] = \"Please select valid image(like jpg|jpeg|png|gif).\";\n          } else if (imageSize > 1048576) {\n            isValid = false;\n    \n            errors[\"profile_image\"] = \"Image size less than 1 MB.\";\n          }\n        }\n    \n        this.setState({\n          errors: errors\n        });\n    \n        return isValid;\n      }\n\n    uploadMultipleFiles(e) {\n        this.fileArray = [];\n        this.fileArrayUrl = [];\n        let input = this.state.input;\n        let errors = this.state.errors;\n        input[e.target.name] = e.target.files[0];\n        this.setState({\n        input\n        });\n        this.fileObj.push(e.target.files)\n        \n        if (e.target.files.length != 0) {\n            for (let i = 0; i < this.fileObj.length; i++) {\n                this.fileArrayUrl.push(URL.createObjectURL(this.fileObj[i][0]))\n                this.fileArray.push(this.fileObj[i][0])  \n                \n                for (let j = 0; j < this.fileObj[i].length; j++) {\n                     //console.log(this.fileObj[i][j])\n                     this.fileArray.push(this.fileObj[i][j])\n                }\n            }\n            this.setState({ file: this.fileArray })        \n        }\n    }\n\n    uploadFiles(e) {\n        e.preventDefault()\n        console.log(this.state.file)\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let self = this;\n        document.getElementById('file').value = null;\n        let image_value = document.getElementById('file').value;\n        \n        let data = this.state.file;\n        // Create an object of formData\n        const formData = new FormData();\n        for (let i = 0; i < data.length; i++) {\n            //Update the formData object\n            formData.append(\"fileName[]\", data[i]);\n        }\n\n        let header = {\n            \"Content-Type\": \"multipart/form-data\",\n            \"Access-Control-Allow-Origin\": \"*\",\n        };\n        \n        //  Service.post({\n        //     url: 'api/multiple-image-upload',\n        //     body: formData,\n        //     header : header\n        //   })\n        //   .then(response => {\n        //       console.log(response)\n        //     let data = response;\n        //       if(data) {\n        //         self.setState({ successMessage: 'Images successful Add...' });\n        //         console.log(self.state.successMessage)\n        //       }  \n        //   })\n        //   .catch(err => {\n        //      //console.log(err)\n        //   });\n\n        axios.post(API_BASE_URL + 'api/multiple-image-upload', formData)\n            .then(function (response) {\n                console.log(response)\n                if (response.status === 200) {\n                    self.setState({ 'successMessage': 'Images successful Add...' });\n                    //self.handleClickEmp();\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    render() {\n        return (<>\n             {(this.state.successMessage)?<div className=\"alert alert-success\" role=\"alert\">{this.state.successMessage}</div>:''}\n            <form onSubmit={this.handleSubmit} encType=\"multipart/form-data\">\n                <div className=\"form-group multi-preview\">\n                    {(this.fileArrayUrl || []).map(url => (\n                        <img key={url} src={url} alt=\"...\" style={{ height: 70, width: 70 }} />\n                    ))}\n                </div>\n\n                <div className=\"form-group\">\n                    <input type=\"file\" id=\"file\" className=\"form-control\" name=\"fileName[]\" onClick={(event) => { event.target.files = null }} onChange={this.uploadMultipleFiles} multiple />\n                </div>\n                <div className=\"text-danger\">{this.state.errors.profile_image}\n              </div>\n                <button type=\"submit\" className=\"btn btn-danger btn-block\" >Upload</button>\n            </form >\n        </>\n        )\n    }\n}\nexport default withRouter(MultipleImageUpload);"]},"metadata":{},"sourceType":"module"}