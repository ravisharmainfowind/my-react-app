{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/my-app/src/components/multiple-image-upload/multiple-image-upload.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../../constants/apiConstants';\nimport { withRouter, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MultipleImageUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.fileObj = [];\n    this.fileArray = [];\n    this.fileArrayUrl = [];\n\n    this.fileSelectedHandler = e => {\n      this.setState({\n        files: [...this.state.files, ...e.target.files]\n      });\n      this.fileObj.push(e.target.files);\n\n      for (let i = 0; i < this.fileObj.length; i++) {\n        //this.fileArrayUrl.push(URL.createObjectURL(this.fileObj[0][i]))\n        this.fileArray.push(this.fileObj[0][i]);\n        this.fileArray = this.fileArray.filter(function (element) {\n          return element !== undefined;\n        });\n        console.log(this.fileArray.length); // for (let i = 0; i < this.fileArray.length; i++) {\n        //     this.setState({ files: [...this.state.files, ...this.fileArray] })     \n        // }  \n\n        let data = this.fileArray;\n\n        for (let num of this.fileArray) {\n          this.setState({\n            files: [...this.state.files, ...num]\n          });\n          console.log(num);\n        }\n      }\n    };\n\n    this.state = {\n      file: [null],\n      files: [],\n      successMessage: ''\n    };\n    this.uploadMultipleFiles = this.uploadMultipleFiles.bind(this);\n    this.uploadFiles = this.uploadFiles.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  uploadMultipleFiles(e) {\n    //debugger\n    this.fileObj.push(e.target.files);\n\n    for (let i = 0; i < this.fileObj[0].length; i++) {\n      this.fileArrayUrl.push(URL.createObjectURL(this.fileObj[0][i]));\n      this.fileArray.push(this.fileObj[0][i]);\n    }\n\n    this.setState({\n      file: this.fileArray\n    }); //console.log(this.fileArray)\n\n    console.log(this.fileArray); //console.log(this.state.file)\n  }\n\n  uploadFiles(e) {\n    e.preventDefault();\n    console.log(this.state.file);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let self = this;\n    console.log(this.state.file); // Create an object of formData\n\n    const formData = new FormData(); //Update the formData object\n\n    formData.append(\"fileName\", this.state.file);\n    axios.post(API_BASE_URL + 'api/multiple-image-upload', formData).then(function (response) {\n      console.log(response);\n\n      if (response.status === 200) {\n        self.setState({\n          'successMessage': 'Images successful Add...'\n        }); //self.handleClickEmp();\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        encType: \"multipart/form-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group multi-preview\",\n          children: (this.fileArrayUrl || []).map(url => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: url,\n            alt: \"...\"\n          }, url, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"form-control\",\n            name: \"fileName\",\n            onChange: this.uploadMultipleFiles,\n            multiple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-danger btn-block\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Upload images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          onChange: this.fileSelectedHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _c = withRouter(MultipleImageUpload);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/opt/lampp/htdocs/my-app/src/components/multiple-image-upload/multiple-image-upload.js"],"names":["React","Component","axios","API_BASE_URL","withRouter","Switch","Route","Link","MultipleImageUpload","constructor","props","fileObj","fileArray","fileArrayUrl","fileSelectedHandler","e","setState","files","state","target","push","i","length","filter","element","undefined","console","log","data","num","file","successMessage","uploadMultipleFiles","bind","uploadFiles","handleSubmit","URL","createObjectURL","preventDefault","event","self","formData","FormData","append","post","then","response","status","catch","error","render","map","url"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../../constants/apiConstants';\nimport { withRouter, Switch, Route, Link } from \"react-router-dom\";\n\n\n\nclass MultipleImageUpload extends Component {\n\n    fileObj = [];\n    fileArray = [];\n    fileArrayUrl = [];\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            file: [null],\n            files: [],\n            successMessage:''\n        }\n        this.uploadMultipleFiles = this.uploadMultipleFiles.bind(this)\n        this.uploadFiles = this.uploadFiles.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    uploadMultipleFiles(e) {\n        //debugger\n        this.fileObj.push(e.target.files)\n        for (let i = 0; i < this.fileObj[0].length; i++) {\n            this.fileArrayUrl.push(URL.createObjectURL(this.fileObj[0][i]))\n            this.fileArray.push(this.fileObj[0][i])\n        }\n        this.setState({ file: this.fileArray })\n        //console.log(this.fileArray)\n        console.log(this.fileArray)\n        //console.log(this.state.file)\n    }\n\n    uploadFiles(e) {\n        e.preventDefault()\n        console.log(this.state.file)\n    }\n\n    fileSelectedHandler = (e) => {\n        this.setState({ files: [...this.state.files, ...e.target.files] })\n        this.fileObj.push(e.target.files)\n        for (let i = 0; i < this.fileObj.length; i++) {\n            //this.fileArrayUrl.push(URL.createObjectURL(this.fileObj[0][i]))\n            this.fileArray.push(this.fileObj[0][i])\n            this.fileArray = this.fileArray.filter(function( element ) {\n                return element !== undefined;\n             });\n            console.log(this.fileArray.length)\n                // for (let i = 0; i < this.fileArray.length; i++) {\n                //     this.setState({ files: [...this.state.files, ...this.fileArray] })     \n                // }  \n                let data = this.fileArray;\n                for (let num of this.fileArray) {\n                    this.setState({ files: [...this.state.files, ...num] }) \n                    console.log(num);\n                } \n        }\n      }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let self = this;\n        console.log(this.state.file);\n        \n          // Create an object of formData\n          const formData = new FormData();\n          //Update the formData object\n          formData.append(\"fileName\", this.state.file);\n    \n          axios.post(API_BASE_URL +'api/multiple-image-upload',formData)\n            .then(function (response) {\n              console.log(response)\n              if (response.status === 200) {\n                self.setState({ 'successMessage': 'Images successful Add...' });\n                //self.handleClickEmp();\n              }\n            })\n            .catch(function (error) {\n              console.log(error);\n            });  \n      }\n\n    render() {\n        return (<>\n            <form onSubmit={this.handleSubmit} encType=\"multipart/form-data\">\n                <div className=\"form-group multi-preview\">\n                    {(this.fileArrayUrl || []).map(url => (\n                        <img key={url} src={url} alt=\"...\" />\n                    ))}\n                </div>\n\n                <div className=\"form-group\">\n                    <input type=\"file\" className=\"form-control\" name=\"fileName\" onChange={this.uploadMultipleFiles} multiple />\n                </div>\n                <button type=\"submit\" className=\"btn btn-danger btn-block\" >Upload</button>\n            </form >\n\n            <form>\n                <div><h2>Upload images</h2></div>\n                <h3>Images</h3>\n                <input type=\"file\" multiple onChange={this.fileSelectedHandler} />\n          </form>\n           </> \n        )\n    }\n}\nexport default withRouter(MultipleImageUpload);"]},"metadata":{},"sourceType":"module"}