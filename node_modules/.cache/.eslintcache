[{"/opt/lampp/htdocs/my-app/src/index.js":"1","/opt/lampp/htdocs/my-app/src/App.js":"2","/opt/lampp/htdocs/my-app/src/reportWebVitals.js":"3","/opt/lampp/htdocs/my-app/src/Instructions.js":"4","/opt/lampp/htdocs/my-app/src/components/Header/Header.js":"5","/opt/lampp/htdocs/my-app/src/components/LoginForm/LoginForm.js":"6","/opt/lampp/htdocs/my-app/src/components/RegistrationForm/RegistrationForm.js":"7","/opt/lampp/htdocs/my-app/src/components/Home/Home.js":"8","/opt/lampp/htdocs/my-app/src/components/AlertComponent/AlertComponent.js":"9","/opt/lampp/htdocs/my-app/src/constants/apiConstants.js":"10","/opt/lampp/htdocs/my-app/src/utils/PrivateRoute.js":"11","/opt/lampp/htdocs/my-app/src/components/HookState/HookState.js":"12","/opt/lampp/htdocs/my-app/src/components/CounterExample/CounterExample.js":"13","/opt/lampp/htdocs/my-app/src/components/CustomCounter/CustomCounter.js":"14","/opt/lampp/htdocs/my-app/src/components/ParenttoChild/Parent.js":"15","/opt/lampp/htdocs/my-app/src/components/ChildtoParent/Child.js":"16","/opt/lampp/htdocs/my-app/src/components/Employee/Employee.js":"17","/opt/lampp/htdocs/my-app/src/components/AddEmployee/AddEmployee.js":"18","/opt/lampp/htdocs/my-app/src/components/EditEmployee/EditEmployee.js":"19","/opt/lampp/htdocs/my-app/src/components/DataGrid/DataGrid.js":"20","/opt/lampp/htdocs/my-app/src/utils.js":"21","/opt/lampp/htdocs/my-app/src/components/DataGrid/btn-cell-renderer.js":"22","/opt/lampp/htdocs/my-app/src/components/multiple-image-upload/multiple-image-upload.js":"23","/opt/lampp/htdocs/my-app/src/services/Service.js":"24","/opt/lampp/htdocs/my-app/src/components/ReduxReact/ReduxReact.js":"25","/opt/lampp/htdocs/my-app/src/components/Footer.js":"26","/opt/lampp/htdocs/my-app/src/containers/AddTodo.js":"27","/opt/lampp/htdocs/my-app/src/containers/VisibleTodoList.js":"28","/opt/lampp/htdocs/my-app/src/components/TodoList.js":"29","/opt/lampp/htdocs/my-app/src/components/Todo.js":"30","/opt/lampp/htdocs/my-app/src/containers/FilterLink.js":"31","/opt/lampp/htdocs/my-app/src/components/Link.js":"32","/opt/lampp/htdocs/my-app/src/actions/ index.js":"33","/opt/lampp/htdocs/my-app/src/actions/Index.spec.js":"34","/opt/lampp/htdocs/my-app/src/Store/index.js":"35","/opt/lampp/htdocs/my-app/src/reducers/index.js":"36","/opt/lampp/htdocs/my-app/src/reducers/Todos.js":"37","/opt/lampp/htdocs/my-app/src/reducers/VisibilityFilter.js":"38","/opt/lampp/htdocs/my-app/src/Counter.js":"39"},{"size":1257,"mtime":1615620387413,"results":"40","hashOfConfig":"41"},{"size":3229,"mtime":1615557966348,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1614316910710,"results":"43","hashOfConfig":"41"},{"size":340,"mtime":1614320635919,"results":"44","hashOfConfig":"41"},{"size":5245,"mtime":1615612432636,"results":"45","hashOfConfig":"41"},{"size":5318,"mtime":1615530960490,"results":"46","hashOfConfig":"41"},{"size":7950,"mtime":1615470551762,"results":"47","hashOfConfig":"41"},{"size":1097,"mtime":1614772039490,"results":"48","hashOfConfig":"41"},{"size":1084,"mtime":1614330747699,"results":"49","hashOfConfig":"41"},{"size":143,"mtime":1615294705522,"results":"50","hashOfConfig":"41"},{"size":581,"mtime":1614331156809,"results":"51","hashOfConfig":"41"},{"size":471,"mtime":1614405882445,"results":"52","hashOfConfig":"41"},{"size":667,"mtime":1614413784952,"results":"53","hashOfConfig":"41"},{"size":741,"mtime":1614413852943,"results":"54","hashOfConfig":"41"},{"size":767,"mtime":1614414197542,"results":"55","hashOfConfig":"41"},{"size":953,"mtime":1614412938227,"results":"56","hashOfConfig":"41"},{"size":4002,"mtime":1615448729772,"results":"57","hashOfConfig":"41"},{"size":16375,"mtime":1615801003447,"results":"58","hashOfConfig":"41"},{"size":11069,"mtime":1615454043279,"results":"59","hashOfConfig":"41"},{"size":15434,"mtime":1615529600564,"results":"60","hashOfConfig":"41"},{"size":1049,"mtime":1615200392690,"results":"61","hashOfConfig":"41"},{"size":655,"mtime":1615201941179,"results":"62","hashOfConfig":"41"},{"size":5370,"mtime":1615530699012,"results":"63","hashOfConfig":"41"},{"size":3865,"mtime":1615531043488,"results":"64","hashOfConfig":"41"},{"size":483,"mtime":1615551779055,"results":"65","hashOfConfig":"41"},{"size":474,"mtime":1615551042117,"results":"66","hashOfConfig":"41"},{"size":600,"mtime":1615551123343,"results":"67","hashOfConfig":"41"},{"size":877,"mtime":1615551191517,"results":"68","hashOfConfig":"41"},{"size":609,"mtime":1615548922406,"results":"69","hashOfConfig":"41"},{"size":440,"mtime":1615548881911,"results":"70","hashOfConfig":"41"},{"size":463,"mtime":1615551170554,"results":"71","hashOfConfig":"41"},{"size":525,"mtime":1615548841772,"results":"72","hashOfConfig":"41"},{"size":434,"mtime":1615546206345,"results":"73","hashOfConfig":"41"},{"size":667,"mtime":1615546260879,"results":"74","hashOfConfig":"41"},{"size":406,"mtime":1615554119468,"results":"75","hashOfConfig":"41"},{"size":201,"mtime":1615553591124,"results":"76","hashOfConfig":"41"},{"size":534,"mtime":1615546966234,"results":"77","hashOfConfig":"41"},{"size":305,"mtime":1615553607619,"results":"78","hashOfConfig":"41"},{"size":650,"mtime":1615558153203,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},"1ev1el4",{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"83"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"83"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"83"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"83"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"83"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"83"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"83"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"83"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"83"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"83"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"/opt/lampp/htdocs/my-app/src/index.js",["176","177"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Counter from './Counter';\n//import Instructions from './Instructions';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nconst initialState = {\n  count: 0\n};\n\nfunction reducer(state = initialState, action) {\n  switch(action.type) {\n    case 'INCREMENT':\n      return {\n        count: state.count + 1\n      };\n    case 'DECREMENT':\n      return {\n        count: state.count - 1\n      };\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(reducer);\n\nstore.dispatch({type : 'INCREMENT'});\nstore.dispatch({type : 'DECREMENT'});\n\n// const App = () => (\n//   <div>\n//     <Provider store={store}>\n//     <Counter/>\n//   </Provider>\n//   </div>\n// );\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["178","179"],"/opt/lampp/htdocs/my-app/src/App.js",["180"],"import React, {useState} from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport LoginForm from './components/LoginForm/LoginForm';\nimport RegistrationForm from './components/RegistrationForm/RegistrationForm';\nimport Home from './components/Home/Home';\nimport HookState from './components/HookState/HookState';\nimport CounterExample from './components/CounterExample/CounterExample';\nimport CustomCounter from './components/CustomCounter/CustomCounter';\nimport Parent from './components/ParenttoChild/Parent';\nimport Child from './components/ChildtoParent/Child';\nimport Employee from './components/Employee/Employee';\nimport AddEmployee from './components/AddEmployee/AddEmployee';\nimport EditEmployee from './components/EditEmployee/EditEmployee';\nimport MultipleImageUpload from './components/multiple-image-upload/multiple-image-upload';\nimport DataGrid from './components/DataGrid/DataGrid';\nimport ReduxReact from './components/ReduxReact/ReduxReact';\nimport Counter from './Counter';\nimport PrivateRoute from './utils/PrivateRoute';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport AlertComponent from './components/AlertComponent/AlertComponent';  \nfunction App() {\n  const [title, updateTitle] = useState(null);\n  const [errorMessage, updateErrorMessage] = useState(null);\n  return (\n    <Router>\n    <div className=\"App\" id=\"root\">\n      <Header title={title}/>\n        <div className=\"container d-flex align-items-center flex-column\">\n          <Switch>\n            <Route path=\"/\" exact={true}>\n              <RegistrationForm showError={updateErrorMessage} updateTitle={updateTitle}/>\n            </Route>\n            <Route path=\"/register\">\n              <RegistrationForm showError={updateErrorMessage} updateTitle={updateTitle}/>\n            </Route>\n            <Route path=\"/login\">\n              <LoginForm showError={updateErrorMessage} updateTitle={updateTitle}/>\n            </Route>\n            <Route path=\"/hookstate\">\n              <HookState/>\n            </Route>\n            <Route path=\"/counter\">\n              <CounterExample/>\n            </Route>\n              <Route path=\"/custume\">\n              <CustomCounter/>\n            </Route>\n            <Route path=\"/parent\">\n              <Parent/>\n            </Route>\n            <Route path=\"/child\">\n              <Child/>\n            </Route>\n            <Route exact path=\"/employee\">\n              <Employee/>\n            </Route>\n            <Route path=\"/employee/add\">\n              <AddEmployee/>\n            </Route>\n            <Route path=\"/employee/edit/:id\">\n              <EditEmployee/>\n            </Route>\n            <Route path=\"/data-grid\">\n              <DataGrid/>\n            </Route>\n            <Route path=\"/multi-image\">\n              <MultipleImageUpload/>\n            </Route>\n            <Route path=\"/react-redux\">\n              <Counter/>\n            </Route>\n            <PrivateRoute path=\"/home\">\n              <Home/>\n            </PrivateRoute>\n            \n          </Switch>\n          <AlertComponent errorMessage={errorMessage} hideError={updateErrorMessage}/>\n        </div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;","/opt/lampp/htdocs/my-app/src/reportWebVitals.js",[],"/opt/lampp/htdocs/my-app/src/Instructions.js",[],["181","182"],"/opt/lampp/htdocs/my-app/src/components/Header/Header.js",["183","184","185","186","187","188","189","190","191","192","193","194","195"],"import React, {useState,useEffect} from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router,Switch,Route,useParams,withRouter } from \"react-router-dom\";\nimport { API_BASE_URL,ACCESS_TOKEN_NAME } from '../../constants/apiConstants';\nimport { Navbar,Nav,NavDropdown,Form,FormControl,Button } from 'react-bootstrap';\nimport { Service } from '../../services/Service';\n\nfunction Header(props) {\n    const [state , setState] = useState({\n        successMessage: null,\n        tokenSet:''\n    })\n    const capitalize = (s) => {\n        if (typeof s !== 'string') return ''\n        return s.charAt(0).toUpperCase() + s.slice(1)\n    }\n    let title = capitalize(props.location.pathname.substring(1,props.location.pathname.length))\n    if(props.location.pathname === '/') {\n        title = 'Welcome'\n    }\n\n    const redirectToLogin = () => {\n        //debugger\n        //props.updateTitle('Login')\n        props.history.push('/login'); \n    }\n\n\n    const getLocalTodo = () => {\n         //debugger\n         console.log(state.tokenSet)\n        if (localStorage.getItem(ACCESS_TOKEN_NAME) === null) {\n          localStorage.setItem(ACCESS_TOKEN_NAME, JSON.stringify(null));\n        } else {\n          let todoLocal = localStorage.getItem(ACCESS_TOKEN_NAME);\n          setState(prevState => ({\n            ...prevState,\n            'tokenSet' : todoLocal\n            }))\n        }\n      };\n      useEffect(() => {\n        getLocalTodo();\n      }, []);\n\n    function handleLogout() {\n\n        Service.post({\n            url: 'api/auth/logout',\n            body:{}\n\n          })\n          .then(response => {\n              console.log(response)\n              let data = response;\n            if(data.status==200) { \n                 window.location.reload();\n                        setState(prevState => ({\n                        ...prevState,\n                        'successMessage' : response.message\n                    }))\n                    localStorage.removeItem(ACCESS_TOKEN_NAME)\n                    props.history.push('/login')\n                    window.location.reload();\n                }\n                if(response.status !== 200){\n                    props.history.push('/home')\n                }\n            })\n              .catch(function (error) {\n                props.history.push('/home')\n            });\n       \n            // var token_base64= localStorage.getItem(ACCESS_TOKEN_NAME);\n        // var token = atob(token_base64);\n        // let header = {\n        //     'Authorization': `Bearer ${token}`,\n        //   };\n        //     axios.post(API_BASE_URL+'api/auth/logout',{}, { headers: header})\n        //     .then(function (response) {\n        //         if(response.status==200){\n        //             setState(prevState => ({\n        //                 ...prevState,\n        //                 'successMessage' : response.data.message\n        //             }))\n        //             localStorage.removeItem(ACCESS_TOKEN_NAME)\n        //             props.history.push('/login')\n        //             window.location.reload();\n        //         }\n        //         if(response.status !== 200){\n        //             props.history.push('/home')\n        //         }\n        //     })\n        //     .catch(function (error) {\n        //         props.history.push('/home')\n        //     });    \n    }\n    return(\n        <Router>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\n                <Navbar.Brand href=\"#home\">React Bootstrap Navbar</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"/\">Home</Nav.Link>\n                    <Nav.Link href=\"/hookstate\">Hook State</Nav.Link>\n                    <Nav.Link href=\"/custume\">Custume</Nav.Link>\n                    <Nav.Link href=\"/employee\">Employee</Nav.Link>\n                    <Nav.Link href=\"/data-grid\">Data Grid</Nav.Link>\n                    <Nav.Link href=\"/multi-image\">Multi-Image</Nav.Link>\n                    <Nav.Link href=\"/react-redux\">React-Redux</Nav.Link>\n                    {(state.tokenSet.length > 5 && state.tokenSet!=null && state.tokenSet!=undefined) ? <div className=\"ml-auto\"><button className=\"btn btn-danger\" onClick={() => handleLogout()}>Logout</button></div> : <div className=\"ml-auto\"><button className=\"btn btn-success\" onClick={() => redirectToLogin()}>Login</button></div>}\n                    \n                    {/* <div className=\"row col-12 d-flex justify-content-center text-white\"> */}\n                    {/* {(state.tokenSet.length > 5 && state.tokenSet!=null && state.tokenSet!=undefined) ? <div className=\"ml-auto\"><button className=\"btn btn-danger\" onClick={() => handleLogout()}>Logout</button></div> : <div className=\"ml-auto\"><button className=\"btn btn-success\" onClick={() => redirectToLogin()}>Login</button></div>}    */}\n                    {/* {renderLogout()} */}\n                    {/* </div> */}\n                    </Nav>\n                    \n                </Navbar.Collapse>\n            </Navbar>\n            <br />\n        </Router>\n       \n    )\n}\nexport default withRouter(Header);","/opt/lampp/htdocs/my-app/src/components/LoginForm/LoginForm.js",["196","197","198"],"import React, {useState} from 'react';\nimport axios from 'axios';\nimport './LoginForm.css';\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../constants/apiConstants';\nimport { withRouter } from \"react-router-dom\";\nimport { Service } from '../../services/Service';\n\n\nfunction LoginForm(props) {\n    const [state , setState] = useState({\n        email : \"\",\n        password : \"\",\n        successMessage: null\n    })\n    const handleChange = (e) => {\n        const {id , value} = e.target   \n        setState(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n        if(state.email.length && state.password.length) {\n        const payload={\n            \"email\":state.email,\n            \"password\":state.password,\n        }\n        Service.post({\n            url: 'api/auth/login',\n            body: JSON.stringify({              \n              \"email\": state.email,\n              \"password\": state.password            \n            })\n          })\n          .then(response => {\n            let data = response;\n              if(response.status === 200) {\n                  setState({ successMessage: data.message });\n                  var token = response.access_token;\n                  var token_base64 = btoa(token);\n                  localStorage.setItem(ACCESS_TOKEN_NAME,token_base64);\n                  redirectToHome();\n                  props.showError(null)\n                }\n                  else if(response.status === 401){\n                  props.showError(\"Username and password do not match\");\n                  }\n                  else{\n                  props.showError(\"Username does not exists\");\n                  } \n          })\n          .catch(err => {\n          //console.log(err)\n          });\n        \n        // axios.post(API_BASE_URL+'api/auth/login', payload)\n        //     .then(function (response) {\n        //         console.log(response)\n        //         if(response.status === 200){\n        //             setState(prevState => ({\n        //                 ...prevState,\n        //                 'successMessage' : 'Login successful. Redirecting to home page..'\n        //             }))\n        //             var token = response.data.access_token;\n        //             var token_base64 = btoa(token);\n        //             // console.log(token_base64);\n        //             // console.log(atob(token_base64));\n        //             localStorage.setItem(ACCESS_TOKEN_NAME,token_base64);\n        //             redirectToHome();\n        //             props.showError(null)\n        //         }\n        //         else if(response.code === 204){\n        //             props.showError(\"Username and password do not match\");\n        //         }\n        //         else{\n        //             props.showError(\"Username does not exists\");\n        //         }\n        //     })\n        //     .catch(function (error) {\n        //         console.log(error);\n        //     });\n         }else {\n            props.showError('Please enter valid username and password')    \n        }  \n    }\n    const redirectToHome = () => {\n        props.updateTitle('Home')\n        props.history.push('/home');\n        window.location.reload();\n    }\n    const redirectToRegister = () => {\n        props.history.push('/register'); \n        props.updateTitle('Register');\n    }\n    return(\n        <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\n            \n            <form>\n                <div className=\"form-group text-left\">\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input type=\"email\" \n                       className=\"form-control\" \n                       id=\"email\" \n                       aria-describedby=\"emailHelp\" \n                       placeholder=\"Enter email\" \n                       value={state.email}\n                       onChange={handleChange}\n                />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                </div>\n                <div className=\"form-group text-left\">\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\n                <input type=\"password\" \n                       className=\"form-control\" \n                       id=\"password\" \n                       placeholder=\"Password\"\n                       value={state.password}\n                       onChange={handleChange} \n                />\n                </div>\n                <div className=\"form-check\">\n                </div>\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary\"\n                    onClick={handleSubmitClick}\n                >Submit</button>\n            </form>\n            <div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\n                {state.successMessage}\n            </div>\n            <div className=\"registerMessage\">\n                <span>Dont have an account? </span>\n                <span className=\"loginText\" onClick={() => redirectToRegister()}>Register</span> \n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(LoginForm);\n","/opt/lampp/htdocs/my-app/src/components/RegistrationForm/RegistrationForm.js",["199","200","201"],"import React, {useState} from 'react';\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\nimport './RegistrationForm.css';\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../constants/apiConstants';\nimport { withRouter } from \"react-router-dom\";\nimport { Service } from '../../services/Service';\n\nfunction RegistrationForm(props) {\n    const [state , setState] = useState({\n        email : \"\",\n        name : \"\",\n        password : \"\",\n        confirmPassword: \"\",\n        successMessage: null\n    })\n    const { register, handleSubmit, errors } = useForm(); \n    const onSubmit = (data) => {\n         //alert(JSON.stringify(data));\n         //console.log(data)\n         handleSubmitClick()\n    };\n    const handleChange = (e) => {\n        const {id , value} = e.target   \n        setState(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n    const sendDetailsToServer = () => {\n        if(state.email.length && state.password.length) {\n            props.showError(null);\n            const payload={\n                \"name\":state.name,\n                \"email\":state.email,\n                \"password\":state.password,\n                \"password_confirmation\":state.confirmPassword,\n            }\n\n            Service.post({\n              url: 'api/auth/register',\n              body: JSON.stringify({\n                \"name\": state.name,\n                \"email\": state.email,\n                \"password\": state.password,\n                \"password_confirmation\":state.confirmPassword\n              })\n            })\n            .then(response => {\n              let data = response;\n                if(response.status === 201) {\n                    setState({ successMessage: data.message });\n                    var token = data.access_token;\n                    var token_base64 = btoa(token);\n                    localStorage.setItem(ACCESS_TOKEN_NAME,token_base64);\n                    redirectToHome();\n                    props.showError(null)\n                }else{\n                    props.showError(\"Some error ocurred\");\n                }  \n            })\n            .catch(err => {\n            //console.log(err)\n            });\n\n            // axios.post(API_BASE_URL+'api/auth/register', payload)\n            //     .then(function (response) {\n            //         console.log(response)\n            //         if(response.status === 201){\n            //             setState(prevState => ({\n            //                 ...prevState,\n            //                 'successMessage' : 'Registration successful. Redirecting to home page..'\n            //             }))\n            //             var token = response.data.access_token;\n            //             var token_base64 = btoa(token);\n            //             localStorage.setItem(ACCESS_TOKEN_NAME,token_base64);\n            //             redirectToHome();\n            //             props.showError(null)\n            //         } else{\n            //             props.showError(\"Some error ocurred\");\n            //         }\n            //     })\n            //     .catch(function (error) {\n            //         console.log(error);\n            //     });    \n        } else {\n            props.showError('Please enter valid username and password')    \n        }\n        \n    }\n    const redirectToHome = () => {\n        //debugger\n        props.updateTitle('Home')\n        props.history.push('/home');\n    }\n    const redirectToLogin = () => {\n        props.updateTitle('Login')\n        props.history.push('/login'); \n    }\n    const handleSubmitClick = (e) => {\n        //e.preventDefault();\n        if(state.password === state.confirmPassword) {\n            sendDetailsToServer()    \n        } else {\n            props.showError('Passwords do not match');\n        }\n    }\n    return(\n        <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-group text-left\">\n                <label htmlFor=\"exampleInputName1\">Name</label>\n                <input ref={register({required:true,minLength:2})}\n                       type=\"text\" \n                       className=\"form-control\" \n                       id=\"name\" \n                       name=\"name\"\n                       aria-describedby=\"emailHelp\" \n                       placeholder=\"Enter Name\" \n                       value={state.name}\n                       onChange={handleChange}\n                />\n                {errors.name && errors.name.type === \"required\" && (<p className=\"error\">This is required</p>)}\n                {errors.name && errors.name.type === \"minLength\" && (<p className=\"error\">This is field required min length of 2</p>)}\n                </div>\n                <div className=\"form-group text-left\">\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input\n                       type=\"email\" \n                       name=\"email\"\n                       className=\"form-control\" \n                       id=\"email\" \n                       aria-describedby=\"emailHelp\" \n                       placeholder=\"Enter email\" \n                       value={state.email}\n                       onChange={handleChange}\n                       ref={register({\n                        required: \"required\"\n                        //,\n                        // pattern: {\n                        //   value: /S+@S+.S+/,\n                        //   message: \"Entered value does not match email format\"\n                        // }\n                      })}\n                />\n                {errors.email && (<p className=\"error\">This is required</p>)}\n                </div>\n                <div className=\"form-group text-left\">\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n                    <input ref={register({required:true})}\n                        type=\"password\" \n                        className=\"form-control\" \n                        id=\"password\" \n                        name=\"password\"\n                        placeholder=\"Password\"\n                        value={state.password}\n                        onChange={handleChange} \n                    />\n                    {errors.password  && (<p className=\"error\">This is required</p>)}\n                </div>\n                <div className=\"form-group text-left\">\n                    <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\n                    <input ref={register({required:true})}\n                        type=\"password\" \n                        className=\"form-control\" \n                        id=\"confirmPassword\"\n                        name=\"confirmPassword\" \n                        placeholder=\"Confirm Password\"\n                        value={state.confirmPassword}\n                        onChange={handleChange} \n                    />\n                    {errors.confirmPassword  && (<p className=\"error\">This is required</p>)}\n                </div>\n                {/* <button \n                    type=\"submit\" \n                    className=\"btn btn-primary\"\n                    onClick={handleSubmitClick}\n                >\n                    Register\n                </button> */}\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary\"\n                >\n                    Register\n                </button> \n            </form>\n            <div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\n                {state.successMessage}\n            </div>\n            <div className=\"mt-2\">\n                <span>Already have an account? </span>\n                <span className=\"loginText\" onClick={() => redirectToLogin()}>Login here</span> \n            </div>\n            \n        </div>\n    )\n}\n\nexport default withRouter(RegistrationForm);","/opt/lampp/htdocs/my-app/src/components/Home/Home.js",[],"/opt/lampp/htdocs/my-app/src/components/AlertComponent/AlertComponent.js",[],"/opt/lampp/htdocs/my-app/src/constants/apiConstants.js",[],"/opt/lampp/htdocs/my-app/src/utils/PrivateRoute.js",[],"/opt/lampp/htdocs/my-app/src/components/HookState/HookState.js",[],"/opt/lampp/htdocs/my-app/src/components/CounterExample/CounterExample.js",[],"/opt/lampp/htdocs/my-app/src/components/CustomCounter/CustomCounter.js",[],"/opt/lampp/htdocs/my-app/src/components/ParenttoChild/Parent.js",[],"/opt/lampp/htdocs/my-app/src/components/ChildtoParent/Child.js",[],"/opt/lampp/htdocs/my-app/src/components/Employee/Employee.js",["202","203","204","205","206","207","208","209","210","211","212","213","214","215"],"import React , { Component } from 'react';\nimport axios from 'axios';\nimport {API_BASE_URL } from '../../constants/apiConstants';\nimport { withRouter,Switch, Route, Link,Redirect } from \"react-router-dom\";\n//import {Route, IndexRoute,browserHistory} from 'react-router';\nimport { Router,browserHistory } from 'react-router';\nimport AddEmployee from '../AddEmployee/AddEmployee';\nimport { Service } from '../../services/Service';\n\nclass Employee extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          //error: null,\n          isLoaded: false,\n          employees: [],\n          deleteMessage:''\n        };\n        this.getEmployees = this.getEmployees.bind(this);\n        this.handleClickDelete = this.handleClickDelete.bind(this);\n      }\n \n      componentDidMount() {   \n        this.getEmployees();\n      } \n\n    getEmployees= () => {\n        let self =this;\n        Service.get({\n            url: 'api/employees'\n        })\n        .then(response => {\n            let data = response;\n            if(data) {\n             self.setState({ employees: data })\n            }\n        })\n        .catch(err => {\n        });   \n    }\n\n    handleClickDelete(id){\n       console.log(id)\n       let self =this;\n        Service.delete({\n            url: 'api/employees/'+id\n          })\n          .then(response => {\n              let data = response;\n            if(data) {\n                self.setState({ deleteMessage: data.message }) \n                self.getEmployees();\n            }\n          })\n          .catch(err => {\n          });\n    };\n\n    handleClickEdit(id){\n        //const { history } = this.props;\n        //if(history) history.push('/employee/edit/'+id);\n        const { history } = this.props;\n        this.props.history.push('/employee/edit/'+id);\n       }\n\n    handleClickRd(){\n        const { history } = this.props;\n        this.props.history.push('/employee/add');\n    }\n\n    render() {   \n        const { history } = this.props;\n            const EmployeeData = this.state.employees.length > 0 && this.state.employees.map((employee,idx) => {  \n                const self = this;  \n            return  <>\n            <tr key={employee!= undefined && employee.id}>\n            <td scope=\"row\" key={idx}>{idx+1}</td>\n            <td>{employee!= undefined && employee.employee_name}</td>\n            <td>{employee!= undefined && employee.employee_salary}</td>\n            <td>{employee!= undefined && employee.employee_age}</td>\n            <td> \n                \n                {/* <Link to={'/employee/edit/'+employee.id} className=\"btn btn-primary\"> Edit </Link>    */}\n                <button className=\"btn btn-primary\" onClick={() => self.handleClickEdit(employee.id)}>Edit</button>/\n                <button className=\"btn btn-danger\" key={idx+2} id={employee.id} value={employee.id} onClick={() => self.handleClickDelete(employee.id)}>Delete</button>\n             </td>    \n            </tr>\n            </>;   \n          });\n        \n    return <div className=\"container\">\n       <button onClick={() => this.handleClickRd()} className=\"btn btn-success btn-lg float-right\"> Add Employee </button>\n         {/* <Link to={'/employee/add/'} className=\"btn btn-success btn-lg float-right\"> Add Employee </Link> */}\n         <Switch>\n              <Route exact path='/employee/add/' component={AddEmployee} />\n          </Switch>\n       \n                <table className=\"table\">\n                   \n                <thead>\n                    <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Employee Name</th>\n                    <th scope=\"col\">Salary</th>\n                    <th scope=\"col\">Age</th>\n                    <th scope=\"col\">Action</th>\n                    </tr>\n                </thead>\n                <tbody>        \n                     {EmployeeData}\n                     \n                </tbody>\n                </table>\n         </div>;\n  }\n}\n\nexport default withRouter(Employee);","/opt/lampp/htdocs/my-app/src/components/AddEmployee/AddEmployee.js",["216","217","218","219","220","221","222","223","224","225","226","227","228","229"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../../constants/apiConstants';\nimport { withRouter, Switch, Route, Link } from \"react-router-dom\";\nimport { Service } from '../../services/Service';\n//import {Route, IndexRoute,browserHistory} from 'react-router';\nimport { Router, browserHistory } from 'react-router';\nimport './AddEmployee.css';\n\nclass AddEmployee extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: {\n          employee_name:'',\n          employee_salary:'',\n          employee_age:'',\n          mobile_number:'',\n          profile_image:'',\n          gender:'',\n          email:'',\n          date:'',\n          address:'',\n      },\n      formData: {},\n      errors: {},\n      successMessage: '',\n      // Initially, no file is selected\n      selectedFile: null,\n      checked: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    let input = this.state.input;\n    let errors = this.state.errors;\n    if (event.target.name === \"profile_image\") {\n      console.log(event.target.files[0])\n      input[event.target.name] = event.target.files[0];\n      this.setState({\n        input\n      });\n      console.log(this.state.input)\n    } else {\n      if (event.target.name === \"checkbox\") {\n        if (event.target.checked) {\n          this.state.checked = true;\n        } else {\n          this.state.checked = false;\n        }\n      }\n      //let input = this.state.input;\n      //let errors = this.state.errors;\n      input[event.target.name] = event.target.value;\n      errors[event.target.name] = '';\n      this.setState({\n        input\n      });\n      console.log(this.state.input)\n\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let self = this;\n    if (this.validate()) {\n      //debugger \n      let input = {};\n      input[\"employee_name\"] = \"\";\n      input[\"employee_salary\"] = \"\";\n      input[\"employee_age\"] = \"\";\n      input[\"email\"] = \"\";\n      input[\"mobile_number\"] = \"\";\n      input[\"profile_image\"] = \"\";\n      input[\"image_name\"] = \"\";\n      input[\"gender\"] = \"\";\n      input[\"address\"] = \"\";\n      input[\"date\"] = \"\";\n      this.setState({ input: input });\n\n      // Create an object of formData\n      const formData = new FormData();\n      //debugger\n      //Update the formData object\n      formData.append(\"profile_image\", this.state.input.profile_image);\n      formData.append(\"employee_name\", this.state.input.employee_name);\n      formData.append(\"employee_salary\", this.state.input.employee_salary);\n      formData.append(\"employee_age\", this.state.input.employee_age);\n      formData.append(\"mobile_number\", this.state.input.mobile_number);\n      formData.append(\"gender\", this.state.input.gender);\n      formData.append(\"address\", this.state.input.address);\n      formData.append(\"email\", this.state.input.email);\n      formData.append(\"date\", this.state.input.date);\n\n      console.log('@@@@@@@@@@@@@@@@@@@@@@@@', formData.values())\n       let header = {\n         \"Content-Type\": \"multipart/form-data\",\n         \"Access-Control-Allow-Origin\": \"*\",\n       };\n\n      Service.post({\n        url: 'api/employees',\n        body: formData,\n        header:header\n      })\n      .then(response => {\n        let data = response;\n          if(data) {\n            self.setState({ successMessage: 'Employee successful Add...' });\n            console.log(self.state.successMessage)\n          }  \n      })\n      .catch(err => {\n         //console.log(err)\n      });\n\n      // axios.post(API_BASE_URL + 'api/employees', formData)\n      //   .then(function (response) {\n      //     console.log(response)\n      //     if (response.status === 201) {\n      //       self.setState({ 'successMessage': 'Employee successful Add...' });\n      //       self.handleClickEmp();\n      //     }\n      //   })\n      //   .catch(function (error) {\n      //     console.log(error);\n      //   });\n    }\n  }\n\n  handleClickEmp() {\n    const { history } = this.props;\n    this.props.history.push('/employee');\n  }\n\n  validate() {\n\n    let input = this.state.input;\n    let errors = {};\n    let isValid = true;\n    //console.log(input[\"profile_image\"].size);\n    if (!input[\"employee_name\"]) {\n      isValid = false;\n      errors[\"employee_name\"] = \"Please enter your employee name.\";\n    }\n\n    if (!input[\"employee_salary\"]) {\n      isValid = false;\n      errors[\"employee_salary\"] = \"Please enter your employee salary.\";\n    }\n\n    if (typeof input[\"employee_salary\"] !== \"undefined\") {\n\n      var pattern = new RegExp(/^[0-9\\b]+$/);\n\n      if (!pattern.test(input[\"employee_salary\"])) {\n        isValid = false;\n        errors[\"employee_salary\"] = \"Please enter only number.\";\n      }\n    }\n\n    if (!input[\"employee_age\"]) {\n      isValid = false;\n      errors[\"employee_age\"] = \"Please enter your employee age.\";\n    }\n\n    if (typeof input[\"employee_age\"] !== \"undefined\") {\n\n      var pattern = new RegExp(/^[0-9\\b]+$/);\n      if (!pattern.test(input[\"employee_age\"])) {\n        isValid = false;\n        errors[\"employee_age\"] = \"Please enter only number.\";\n      }\n\n    }\n\n    if (!input[\"email\"]) {\n      isValid = false;\n      errors[\"email\"] = \"Please enter your email Address.\";\n    }\n\n    if (typeof input[\"email\"] !== \"undefined\") {\n\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n      if (!pattern.test(input[\"email\"])) {\n        isValid = false;\n        errors[\"email\"] = \"Please enter valid email address.\";\n      }\n    }\n\n    if (!input[\"mobile_number\"]) {\n      isValid = false;\n      errors[\"mobile_number\"] = \"Please enter your phone number.\";\n    }\n\n    if (typeof input[\"mobile_number\"] !== \"undefined\") {\n\n      var pattern = new RegExp(/^[0-9\\b]+$/);\n      //var pattern = new RegExp(/^\\+(?:[0-9] ?){6,14}[0-9]$/);\n      if (!pattern.test(input[\"mobile_number\"])) {\n        isValid = false;\n        errors[\"mobile_number\"] = \"Please enter only number.\";\n      } else if (input[\"mobile_number\"].length < 7) {\n        isValid = false;\n        errors[\"mobile_number\"] = \"Please enter valid phone number.\";\n      }\n    }\n\n    if (!input[\"address\"]) {\n      isValid = false;\n      errors[\"address\"] = \"Please enter your address.\";\n    }\n\n    if (!input[\"date\"]) {\n      isValid = false;\n      errors[\"date\"] = \"Please select date.\";\n    }\n\n    if (!input[\"gender\"]) {\n      isValid = false;\n      errors[\"gender\"] = \"Please select gender.\";\n    }\n\n    if (!this.state.checked) {\n      if (!input[\"checkbox\"]) {\n        isValid = false;\n        errors[\"checkbox\"] = \"Please Select Terms & Conditions.\";\n      }\n    }\n\n    if (!input[\"profile_image\"]) {\n      isValid = false;\n      errors[\"profile_image\"] = \"Please select image.\";\n    }\n\n    if (typeof input[\"profile_image\"] !== \"undefined\" && input[\"profile_image\"]===null && input[\"profile_image\"]===undefined) {\n       debugger\n      let imageSize = input[\"profile_image\"].size;\n      if (!input[\"profile_image\"].name.match(/\\.(jpg|jpeg|png|gif)$/)) {\n        isValid = false;\n        errors[\"profile_image\"] = \"Please select valid image(like jpg|jpeg|png|gif).\";\n      } else if (imageSize > 1048576) {\n        isValid = false;\n\n        errors[\"profile_image\"] = \"Image size less than 1 MB.\";\n      }\n    }\n\n    this.setState({\n      errors: errors\n    });\n\n    return isValid;\n  }\n\n  imageValidate() {\n    let input = this.state.input;\n    let errors = {};\n    let isValid = true;\n    //debugger\n    if (!input[\"profile_image\"]) {\n      isValid = false;\n      errors[\"profile_image\"] = \"Please select image.\";\n    }\n\n    if (typeof input[\"profile_image\"] !== \"undefined\") {\n      //debugger\n      let imageSize = input[\"profile_image\"].size;\n      if (!input[\"profile_image\"].name.match(/\\.(jpg|jpeg|png|gif)$/)) {\n        isValid = false;\n        errors[\"profile_image\"] = \"Please select valid image(like jpg|jpeg|png|gif).\";\n      } else if (imageSize > 1048576) {\n        isValid = false;\n\n        errors[\"profile_image\"] = \"Image size less than 1 MB.\";\n      }\n    }\n\n    this.setState({\n      errors: errors\n    });\n\n    return isValid;\n  }\n\n  // On file select (from the pop up)\n  onFileChange = event => {\n    let input = this.state.input;\n    let errors = this.state.errors;\n    input[event.target.name] = event.target.files[0];\n    this.setState({\n      input\n    });\n    // Update the state\n    this.setState({ selectedFile: event.target.files[0] });\n\n  };\n\n  // On file upload (click the upload button)\n  onFileUpload = () => {\n    let self = this;\n    if (this.imageValidate()) {\n      // Create an object of formData\n      const formData = new FormData();\n      //debugger\n      // Update the formData object\n      formData.append(\n        \"myFile\",\n        this.state.selectedFile\n        //this.state.selectedFile.name\n      );\n\n      // Details of the uploaded file\n      console.log(this.state.selectedFile);\n\n      // Request made to the backend api\n      // Send formData object\n      axios.post(API_BASE_URL + 'api/uploadfile', formData)\n        .then(function (response) {\n          console.log(response)\n          let input = self.state.input;\n          input['image_name'] = response.data.image_name;\n          if (response.status === 201) {\n            self.setState({\n              input\n            })\n          }\n          //debugger\n          console.log(self.state.input)\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  };\n\n  maxLengthCheck = (object) => {\n    if (object.target.value.length > object.target.maxLength) {\n     object.target.value = object.target.value.slice(0, object.target.maxLength)\n      }\n    }\n\n\n  render() {\n    const { errors } = this.state;\n    const { history } = this.props;\n    return <div className=\"container\">\n      <div className=\"row\">\n        <form onSubmit={this.handleSubmit} encType=\"multipart/form-data\">\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputEmail4\">Employee Name</label>\n              <input type=\"text\" name=\"employee_name\" className=\"form-control\" id=\"input4Email4\" placeholder=\"Employee Name\" value={this.state.input.employee_name}\n                onChange={this.handleChange} />\n              <div className=\"text-danger\">{this.state.errors.employee_name}</div>\n            </div>\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputPassword4\">Employee Salary</label>\n              <input type=\"number\" maxLength = \"6\" minLength = \"1\" min=\"0\" name=\"employee_salary\" className=\"form-control\" id=\"input4Password4\" placeholder=\"Employee Salary\" value={this.state.input.employee_salary}\n                onChange={this.handleChange} onInput={this.maxLengthCheck} />\n              <div className=\"text-danger\">{this.state.errors.employee_salary}</div>\n            </div>\n          </div>\n          <input type=\"hidden\" name=\"image_name\" value={this.state.input.image_name} />\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputEmail4\">Employee Age</label>\n              <input type=\"number\" name=\"employee_age\" maxLength = \"2\" min=\"0\" className=\"form-control\" id=\"inputEmail44\" placeholder=\"Employee Age\" value={this.state.input.employee_age}\n                onChange={this.handleChange} onInput={this.maxLengthCheck}/>\n              <div className=\"text-danger\">{this.state.errors.employee_age}</div>\n            </div>\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputPassword4\">Employee Mobile No</label>\n              <input type=\"number\" name=\"mobile_number\" maxLength = \"13\" min=\"0\" className=\"form-control\" id=\"inputPasswo4rd4\" placeholder=\"Employee Mobile No\" value={this.state.input.mobile_number}\n                onChange={this.handleChange} onInput={this.maxLengthCheck}/>\n              <div className=\"text-danger\">{this.state.errors.mobile_number}</div>\n            </div>\n          </div>\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputEmail4\">Email</label>\n              <input type=\"email\" name=\"email\" className=\"form-control\" id=\"ifnputEmail44\" placeholder=\"Email\" value={this.state.input.email}\n                onChange={this.handleChange} />\n              <div className=\"text-danger\">{this.state.errors.email}</div>\n            </div>\n            <div className=\"form-group col-md-6\" onChange={this.handleChange}>\n              <label htmlFor=\"inputEmail4\">Gender</label>\n              <div className=\"custom-control custom-radio\">\n                <input type=\"radio\" id=\"customRadio1\" name=\"gender\" value=\"male\" className=\"custom-control-input\" />\n                <label className=\"custom-control-label\" htmlFor=\"customRadio1\">Male</label>\n              </div>\n\n              <div className=\"custom-control custom-radio\">\n                <input type=\"radio\" id=\"customRadio2\" name=\"gender\" value=\"female\" className=\"custom-control-input\" />\n                <label className=\"custom-control-label\" htmlFor=\"customRadio2\">Female</label>\n              </div>\n              <div className=\"text-danger\">{this.state.errors.gender}</div>\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <label htmlFor=\"inputAddress\">Image</label>\n            <div className=\"custom-file\">\n              <input type=\"file\" name=\"profile_image\" className=\"custom-file-input\" id=\"inputGroupFile01\"\n                onChange={this.handleChange} />\n              <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">Choose file</label>\n              <div className=\"text-danger\">{this.state.errors.profile_image}</div>\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-12\">\n              <label htmlFor=\"inputEmail4\">Date</label>\n              <input type=\"date\" name=\"date\" className=\"form-control\" id=\"ifnputEmail44\" placeholder=\"Date\" value={this.state.input.date}\n                onChange={this.handleChange} />\n              <div className=\"text-danger\">{this.state.errors.date}</div>\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"inputAddress\">Address</label>\n            <input type=\"text\" name=\"address\" className=\"form-control\" id=\"inputAddress\" placeholder=\"Address\" value={this.state.input.address}\n              onChange={this.handleChange} />\n            <div className=\"text-danger\">{this.state.errors.address}</div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"form-check\">\n              <input className=\"form-check-input\" type=\"checkbox\" name=\"checkbox\" onChange={this.handleChange} id=\"gridCheck\"\n              />\n\n              <label className=\"form-check-label\" htmlFor=\"gridCheck\">\n                Check me out\n                            </label>\n              <div className=\"text-danger\">{this.state.errors.checkbox}</div>\n            </div>\n          </div>\n          {(this.state.checked === true) ? <button type=\"submit\" className=\"btn btn-primary\">Sign in</button> : <button type=\"button\" disabled className=\"btn btn-primary\">Sign in</button>}\n          {/* <button type=\"submit\" className=\"btn btn-primary\">Sign in</button> */}\n        </form>\n\n        {/* <form>\n          <div className=\"form-row pad_class\">\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputAddress\">Image</label>\n              <div className=\"custom-file\"></div>\n              <input type=\"file\" name=\"profile_image\" onChange={this.onFileChange} />\n              <div className=\"text-danger\">{this.state.errors.profile_image}\n              </div><br />\n              <button type=\"button\" onClick={this.onFileUpload} className=\"btn btn-primary\">\n                Upload!\n               </button>\n              <br />\n            </div>\n          </div>\n        </form> */}\n      </div>\n    </div>;\n  }\n}\nexport default withRouter(AddEmployee);","/opt/lampp/htdocs/my-app/src/components/EditEmployee/EditEmployee.js",["230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253"],"import React , { Component } from 'react';\nimport axios from 'axios';\nimport {API_BASE_URL } from '../../constants/apiConstants';\nimport { withRouter,Switch, Route, Link } from \"react-router-dom\";\nimport { Form, Input, Result, Button, Popover, Row, Col, Image, notification } from 'antd';\n//import {Route, IndexRoute,browserHistory} from 'react-router';\nimport { Router,browserHistory } from 'react-router';\nimport { Service } from '../../services/Service';\n\nclass EditEmployee extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            input: {\n              employee_name:'',\n              employee_salary:'',\n              employee_age:'',\n              mobile_number:'',\n              profile_image:'',\n              gender:'',\n              email:'',\n              date:'',\n              address:'',\n            },\n            errors: {},\n            employees: [],\n            employeeId:'',\n            loading:false,\n            successMessage:''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n\n    componentDidMount(){\n        let urlElements = window.location.pathname.split('/');\n        let employeeIds = urlElements[3];\n        this.state.employeeId = urlElements[3];\n        console.log(this.state.employeeId);\n        this.getEmployeeDetails();\n    } \n    \n    getEmployeeDetails= () => {\n        let self =this;\n        Service.get({\n            url: 'api/employees/'+self.state.employeeId\n        })\n        .then(response => {\n            let data = response;\n            if(data) {\n             self.setState({ employees: data })\n             let input = {};\n             input[\"employee_name\"] = self.state.employees[0].employee_name;\n             input[\"employee_salary\"] = self.state.employees[0].employee_salary;\n             input[\"employee_age\"] = self.state.employees[0].employee_age;\n             input[\"email\"] = self.state.employees[0].email;\n             input[\"mobile_number\"] = self.state.employees[0].mobile_number;\n             input[\"address\"] = self.state.employees[0].address;\n             self.setState({input:input});\n            }\n        })\n        .catch(err => {\n        });       \n    }\n\n    handleChange(event) {\n        let input = this.state.input;\n        let errors = this.state.errors;\n        input[event.target.name] = event.target.value;\n        errors[event.target.name] = '';\n        this.setState({\n          input\n        });\n        //this.validate();\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let self = this;\n        if(this.validate()){\n            //console.log(this.state);\n            let input = {};\n            input[\"employee_name\"] = \"\";\n            input[\"employee_salary\"] = \"\";\n            input[\"employee_age\"] = \"\";\n            input[\"email\"] = \"\";\n            input[\"mobile_number\"] = \"\";\n            input[\"address\"] = \"\";\n            this.setState({input:input});\n            let employeeData = this.state.input;\n            self.setState({loading:true});\n            Service.put({\n              url: 'api/employees/'+self.state.employeeId,\n              body: employeeData\n            })\n            .then(response => {\n              self.setState({loading:false});\n              if(response.status === 'error') {\n                self.openNotification('error', 'Oops!', response.message);\n                return;\n              }\n                self.openNotification('success', 'Success!', 'You have been data updated successfully');\n                self.handleClickEmp();\n            })\n            .catch(err => {\n               self.setState({loading:false});\n               self.openNotification('error', 'Oops!', 'Something went wrong');\n            });   \n        }\n    }\n\n     openNotification(type, message, description){\n      notification[type]({\n        message: message,\n        description: description\n      });\n    };\n\n    handleClickEmp(){\n        const { history } = this.props;\n        this.props.history.push('/employee');\n    }\n      \n      validate(){\n        let input = this.state.input;\n        let errors = {};\n        let isValid = true;\n    \n        if (!input[\"employee_name\"]) {\n          isValid = false;\n          errors[\"employee_name\"] = \"Please enter your employee name.\";\n        }\n\n        if (!input[\"employee_salary\"]) {\n            isValid = false;\n            errors[\"employee_salary\"] = \"Please enter your employee salary.\";\n        }\n\n        if (typeof input[\"employee_salary\"] !== \"undefined\") {\n            \n            var pattern = new RegExp(/^[0-9\\b]+$/);\n            if (!pattern.test(input[\"employee_salary\"])) {\n              isValid = false;\n              errors[\"employee_salary\"] = \"Please enter only number.\";\n            }      \n        }\n\n        if (!input[\"employee_age\"]) {\n            isValid = false;\n            errors[\"employee_age\"] = \"Please enter your employee age.\";\n        }\n        \n        if (typeof input[\"employee_age\"] !== \"undefined\") {\n            \n            var pattern = new RegExp(/^[0-9\\b]+$/);\n            if (!pattern.test(input[\"employee_age\"])) {\n              isValid = false;\n              errors[\"employee_age\"] = \"Please enter only number.\";\n            }\n        \n        } \n\n        if (!input[\"email\"]) {\n          isValid = false;\n          errors[\"email\"] = \"Please enter your email Address.\";\n        }\n    \n        if (typeof input[\"email\"] !== \"undefined\") {\n            \n          var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n          if (!pattern.test(input[\"email\"])) {\n            isValid = false;\n            errors[\"email\"] = \"Please enter valid email address.\";\n          }\n        }\n    \n        if (!input[\"mobile_number\"]) {\n          isValid = false;\n          errors[\"mobile_number\"] = \"Please enter your phone number.\";\n        }\n    \n        if (typeof input[\"mobile_number\"] !== \"undefined\") {\n            \n          var pattern = new RegExp(/^[0-9\\b]+$/);\n          if (!pattern.test(input[\"mobile_number\"])) {\n            isValid = false;\n            errors[\"mobile_number\"] = \"Please enter only number.\";\n          }else if(input[\"mobile_number\"].length != 10){\n            isValid = false;\n            errors[\"mobile_number\"] = \"Please enter valid phone number.\";\n          }\n        }\n    \n        if (!input[\"address\"]) {\n          isValid = false;\n          errors[\"address\"] = \"Please enter your address.\";\n        }\n    \n        this.setState({\n          errors: errors\n        });\n    \n        return isValid;\n    }\n\n    render() { const {errors} = this.state;\n    const { history } = this.props;   \nreturn <div className=\"container\">\n          <div className=\"row\">\n                     <form onSubmit={this.handleSubmit} >\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-6\">\n                            <label htmlFor=\"inputEmail4\">Employee Name</label>\n                            <input type=\"text\" name=\"employee_name\" className=\"form-control\" id=\"input4Email4\" placeholder=\"Employee Name\" value={this.state.input.employee_name}\n                             onChange={this.handleChange}/>\n                            <div className=\"text-danger\">{this.state.errors.employee_name}</div>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                            <label htmlFor=\"inputPassword4\">Employee Salary</label>\n                            <input type=\"text\" name=\"employee_salary\" className=\"form-control\" id=\"input4Password4\" placeholder=\"Employee Salary\" value={this.state.input.employee_salary}\n                            onChange={this.handleChange} />\n                            <div className=\"text-danger\">{this.state.errors.employee_salary}</div>\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-6\">\n                            <label htmlFor=\"inputEmail4\">Employee Age</label>\n                            <input type=\"text\" name=\"employee_age\" className=\"form-control\" id=\"inputEmail44\" placeholder=\"Employee Age\" value={this.state.input.employee_age}\n                             onChange={this.handleChange} />\n                            <div className=\"text-danger\">{this.state.errors.employee_age}</div>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                            <label htmlFor=\"inputPassword4\">Employee Mobule No</label>\n                            <input type=\"text\" name=\"mobile_number\" className=\"form-control\" id=\"inputPasswo4rd4\" placeholder=\"Employee Mobule No\" value={this.state.input.mobile_number}\n                             onChange={this.handleChange} />\n                            <div className=\"text-danger\">{this.state.errors.mobile_number}</div>\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-6\">\n                            <label htmlFor=\"inputEmail4\">Email</label>\n                            <input type=\"email\" name=\"email\" readOnly className=\"form-control\" id=\"ifnputEmail44\" placeholder=\"Email\" value={this.state.input.email}\n                             onChange={this.handleChange} />\n                            <div className=\"text-danger\">{this.state.errors.email}</div>\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"inputAddress\">Address</label>\n                            <input type=\"text\" name=\"address\" className=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\" value={this.state.input.address}\n                             onChange={this.handleChange} />\n                            <div className=\"text-danger\">{this.state.errors.address}</div>\n                        </div>\n                        <div className=\"form-group\">\n                            <div className=\"form-check\">\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\"\n                              />\n                            <label className=\"form-check-label\" htmlFor=\"gridCheck\">\n                                Check me out\n                            </label>\n                            </div>\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">Sign in</button>\n                     </form>                     \n                   </div>\n          \n     </div>;\n}\n\n}\n\nexport default withRouter(EditEmployee);","/opt/lampp/htdocs/my-app/src/components/DataGrid/DataGrid.js",["254","255","256","257","258","259","260","261","262","263","264","265","266","267","268"],"import React, { useState,useEffect } from 'react';\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\nimport { Service } from '../../services/Service';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'ag-grid-enterprise';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport {API_BASE_URL } from '../../constants/apiConstants';\nimport { Form,Modal,Button,ButtonGroup,Input,Image} from \"react-bootstrap\";\n\nconst DataGrid = () => {\n    const [gridApi, setGridApi] = useState(null);\n    const [gridColumnApi, setGridColumnApi] = useState(null);\n    const [rowData, setRowData] = useState([]);\n    const [employees, setEmployees] = useState(null);\n    const [startDate, setStartDate] = useState(new Date());\n    const [successMessage, setSuccessMessage] = useState(null);\n    const [state , setState] = useState({\n      email : \"\",\n      employee_name : \"\",\n      employee_salary : \"\",\n      employee_age : \"\",\n      mobile_number : \"\",\n      date: \"\",\n      gender: \"\",\n      address:\"\",\n      profile_image:\"\",\n      image_path:\"\",\n      id:\"\"\n  })\n    const [showModal, setShow] = useState(false);\n    \n    const handleClose = () => setShow(false);\n\n    const handleShow = e => {\n       setShow(true)\n       let self =this;\n        const selectedNodes = gridApi.getSelectedNodes()\n        const selectedData = selectedNodes.map( node => node.data )\n        const selectedDataStringPresentation = selectedData.map((employeeData)=>{\n          //console.log(employeeData.id)\n          state.id              = employeeData.id;\n          state.employee_name   = employeeData.employee_name;\n          state.employee_salary = employeeData.employee_salary;\n          state.employee_age    = employeeData.employee_age;\n          state.email           = employeeData.email;\n          state.mobile_number   = employeeData.mobile_number;\n          state.address         = employeeData.address;\n          state.gender          = employeeData.gender;\n          state.date            = employeeData.date;\n          state.profile_image   = employeeData.profile_image;\n          state.image_path      = employeeData.profile_image;        \n        })     \n    };\n    \n    \n\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = (data) => {\n    //event.preventDefault();\n    let self = this; \n      let data1 = new FormData();\n       data1.append(\"_method\", 'PUT');\n       data1.append(\"profile_image\", state.profile_image);\n       data1.append(\"employee_name\", state.employee_name);\n       data1.append(\"employee_salary\", state.employee_salary);\n       data1.append(\"employee_age\", state.employee_age);\n       data1.append(\"mobile_number\", state.mobile_number);\n       data1.append(\"gender\", state.gender);\n       data1.append(\"address\", state.address);\n       data1.append(\"email\", state.email);\n       data1.append(\"date\", state.date);\n    // append another data ....\n      let header = {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      };\n\n      Service.put({\n        url: 'api/employees/'+state.id,\n        body: data1\n        //header:header\n      })\n      .then(response => {\n        let data = response;\n          if(data) {\n            //window.location.reload();\n            setSuccessMessage(response.message);\n            console.log(successMessage)\n            setTimeout(\n              () => window.location.reload(),\n              3000\n            );\n\n          }  \n      })\n      .catch(err => {\n         console.log(err)\n      });  \n\n    //   axios({\n    //     method : \"POST\",\n    //     //baseURL: API_BASE_URL+'api/employees/'+state.id,\n    //     url    : API_BASE_URL+'api/employees/'+state.id,\n    //     //params : params,\n    //     data   : data1,\n    //     headers: headers,\n    //   }).then(response => {\n    //       if(response.status === 200){\n    //           window.location.reload();\n    //           self.setState({'successMessage' : 'Employee successful Edit...'});                 \n    //       }\n    //   })\n    //   .catch(function (error) {\n    //     console.log(error);\n    // });\n  };\n   \n    const onGridReady = (params) => {\n        setGridApi(params.api);\n        setGridColumnApi(params.columnApi);\n        const updateData = (data) => {\n          setRowData(data);\n        };  \n        Service.get({\n            url: 'api/employees'\n        })\n        .then(response => {\n             updateData(response);\n        })  \n        //  fetch(API_BASE_URL+'api/employees')\n        // .then((resp) => resp.json())\n        // .then((data) => updateData(data));\n    };    \n\n    const onButtonClick = e => {\n        const selectedNodes = gridApi.getSelectedNodes()\n        const selectedData = selectedNodes.map( node => node.data )\n        const selectedDataStringPresentation = selectedData.map( node => `${node.employee_name} ${node.employee_age}`).join(', ')\n        alert(`Selected nodes: ${selectedDataStringPresentation}`)\n    }\n\n    const onDeleteClick = e => {\n        let self =this;\n        const selectedNodes = gridApi.getSelectedNodes()\n        const selectedData = selectedNodes.map( node => node.data )\n        const selectedDataStringPresentation = selectedData.map((employeeData)=>{\n            console.log(employeeData.id)\n            let id = employeeData.id;\n            Service.delete({\n                url: 'api/employees/'+id\n              })\n              .then(response => {\n                  console.log(response)\n                  let data = response;\n                if(data) { \n                    window.location.reload();\n                }\n              })\n              .catch(err => {\n                console.log(err)\n              });\n        });\n    } \n\n    const handleChange = (e) => {\n      const {name , value} = e.target\n      if (e.target.name === \"profile_image\") { \n        setState(prevState => ({\n          ...prevState,\n          profile_image : e.target.files[0]\n      }))\n        //console.log(state.profile_image)\n      } else { \n      setState(prevState => ({\n          ...prevState,\n          [name] : value\n      }))\n      }\n    }\n\n    return (<>\n        <div className=\"ag-theme-alpine\" style={{ height: 600, width: 1040 }}>\n            <button className=\"btn btn-primary\" onClick={onButtonClick}>Get selected rows</button>\n            <button className=\"btn btn-danger\" onClick={onDeleteClick}>Delete Rows</button>\n            <button className=\"btn btn-warning\" onClick={handleShow}>Edit Row</button>\n            <AgGridReact\n            rowSelection=\"multiple\"\n            defaultColDef={{\n              width: 150,\n              editable: true,\n              filter: 'agTextColumnFilter',\n              floatingFilter: true,\n              resizable: true,\n            }}\n            defaultColGroupDef={{ marryChildren: true }}\n            columnTypes={{\n              numberColumn: {\n                width: 130,\n                filter: 'agNumberColumnFilter',\n              },\n              medalColumn: {\n                width: 100,\n                columnGroupShow: 'open',\n                filter: false,\n              },\n              nonEditableColumn: { editable: false },\n              dateColumn: {\n                filter: 'agDateColumnFilter',\n                filterParams: {\n                  comparator: function (filterLocalDateAtMidnight, cellValue) {\n                    var dateParts = cellValue.split('/');\n                    var day = Number(dateParts[0]);\n                    var month = Number(dateParts[1]) - 1;\n                    var year = Number(dateParts[2]);\n                    var cellDate = new Date(year, month, day);\n                    if (cellDate < filterLocalDateAtMidnight) {\n                      return -1;\n                    } else if (cellDate > filterLocalDateAtMidnight) {\n                      return 1;\n                    } else {\n                      return 0;\n                    }\n                  },\n                },\n              },\n            }}\n            rowData={rowData}\n            onGridReady={onGridReady}\n          >\n            <AgGridColumn headerName=\"Employee Name\" field=\"employee_name\" checkboxSelection={ true }/>\n            <AgGridColumn headerName=\"Mobile No.\" field=\"mobile_number\" type=\"numberColumn\"/>\n            <AgGridColumn headerName=\"Employee Age\" field=\"employee_age\" type=\"numberColumn\" />\n            <AgGridColumn headerName=\"Email\" field=\"email\" />\n            <AgGridColumn\n              headerName=\"Date\"\n              field=\"date\"\n              type={['dateColumn', 'nonEditableColumn']}\n              width={220}\n            />\n          </AgGridReact>\n        </div>\n\n       <Modal show={showModal} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Employee Data</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n           <Form onSubmit={handleSubmit(onSubmit)} encType=\"multipart/form-data\">\n           <Form.Group>\n              <Form.Label>Employee Name: </Form.Label>\n              <Form.Control type=\"text\" onChange={handleChange} value={state.employee_name} name=\"employee_name\" placeholder=\"Employee Name\" ref={register({required:true,minLength:2})}/> \n              {errors.employee_name && errors.employee_name.type === \"required\" && (<p className=\"error\">This is required</p>)}\n                {errors.employee_name && errors.employee_name.type === \"minLength\" && (<p className=\"error\">This is field required min length of 2</p>)}          \n          </Form.Group>\n          <Form.Group>\n              <Form.Label>Employee Salary: </Form.Label>\n              <Form.Control type=\"text\" onChange={handleChange} value={state.employee_salary} name=\"employee_salary\" placeholder=\"Employee Salary\" ref={register({required:true,pattern: /\\d+/})}/> \n              {errors.employee_salary && errors.employee_salary.type === \"required\" && (<p className=\"error\">This is required</p>)} \n              {errors.employee_salary && errors.employee_salary.type === \"pattern\" && (<p className=\"error\">Please enter digits for Salary.</p>)}            \n          </Form.Group>\n         \n          <Form.Group>\n              <Form.Label>Employee Age: </Form.Label>\n              <Form.Control type=\"text\" onChange={handleChange} value={state.employee_age} name=\"employee_age\" placeholder=\"Employee Age\"  ref={register({ required:true,pattern: /\\d+/ })}/> \n              {errors.employee_age && errors.employee_age.type === \"required\" && (<p className=\"error\">This is required</p>)}\n              {errors.employee_age && errors.employee_age.type === \"pattern\" && (<p className=\"error\">Please enter number for age.</p>)}            \n          </Form.Group>\n\n          <Form.Group>\n              <Form.Label>Employee Email: </Form.Label>\n              <Form.Control type=\"text\" onChange={handleChange} value={state.email} name=\"email\" placeholder=\"Employee Age\"  ref={register({ required: true, pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,maxLength: 50 })}/> \n              {errors.email && errors.email.type === \"required\" && (<p className=\"error\">This is required</p>)}\n              {errors.email && errors.email.type === \"pattern\" && (<p className=\"error\">Please enter valid email.</p>)}\n              {errors.email && errors.email.type === \"maxLength\" && (<p className=\"error\">This is field required max length of 50</p>)}            \n          </Form.Group>\n          \n          <Form.Group onChange={handleChange} ref={register({ required:true })}>\n          <ButtonGroup>\n          <Form.Label>Gender: </Form.Label>\n          <Form.Label >Male\n            <Form.Control type=\"radio\" name=\"gender\" value='male' checked={state.gender === 'male'} ref={register}/>\n          </Form.Label>\n          <Form.Label>Female\n            <Form.Control type=\"radio\" name=\"gender\" checked={state.gender === 'female'} value='female' ref={register}/>\n          </Form.Label>\n        </ButtonGroup>\n        {errors.gender && errors.gender.type === \"required\" && (<p className=\"error\">This is required</p>)}\n        </Form.Group>\n\n         <Form.Group>\n              <Form.Label>Mobile No.: </Form.Label>\n              <Form.Control type=\"text\" maxLength=\"13\" onChange={handleChange} value={state.mobile_number} name=\"mobile_number\" placeholder=\"mobile number\"  ref={register({ required: true, pattern: /\\d+/,maxLength: 13,minLength:7 })}/> \n              {errors.mobile_number && errors.mobile_number.type === \"required\" && (<p className=\"error\">This is required</p>)}\n              {errors.mobile_number && errors.mobile_number.type === \"pattern\" && (<p className=\"error\">Please enter valid mobile number(only digits).</p>)}\n              {errors.mobile_number && errors.mobile_number.type === \"maxLength\" && (<p className=\"error\">This is field required max length of 13</p>)}\n              {errors.mobile_number && errors.mobile_number.type === \"minLength\" && (<p className=\"error\">This is field required min length of 7</p>)}            \n          </Form.Group>\n          <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\n          <Form.Group>\n              <Form.Label>Date of Birth: </Form.Label>\n              <Form.Control type=\"date\" onChange={handleChange} value={state.date} selected={state.date} name=\"date\" placeholder=\"Date of Birth\"  ref={register({ required: true, pattern: /^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/ })}/> \n              {errors.date && errors.date.type === \"required\" && (<p className=\"error\">This is required</p>)}\n              {errors.date && errors.date.type === \"pattern\" && (<p className=\"error\">Please enter valid Date of Birth.</p>)}                \n          </Form.Group>\n\n          <Form.Group>\n              <Form.Label>Address: </Form.Label>\n              <Form.Control type=\"text\" onChange={handleChange} value={state.address} name=\"address\" placeholder=\"Address\"  ref={register({ required: true })}/> \n              {errors.address && errors.address.type === \"required\" && (<p className=\"error\">This is required</p>)}               \n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label htmlFor=\"title\">Profile Image:</Form.Label>\n            <Form.Control\n              type=\"file\"\n              autoComplete=\"off\"\n              name=\"profile_image\"\n              id=\"profile_image\"\n              onChange={handleChange}\n              //ref={register({ required: true })}\n            />\n            {errors.profile_image && errors.profile_image.type === \"required\" && (<p className=\"error\">This is required</p>)} \n          </Form.Group>\n\n          <div className=\"col-md-4\">\n            {(state.image_path!=null)?<Image src={`http://localhost/laravel-jwt-auth/public/profile_image/${state.profile_image}`} style={{ height:\"75px\",width:\"75px\"}}/>:''}\n          </div><br/>\n         \n          <Button variant=\"primary\" type=\"submit\">\n              Submit\n          </Button>\n          </Form> \n          {(successMessage)?<div className=\"alert alert-success\" role=\"alert\">{successMessage}</div>:''}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            \n          </Modal.Footer>\n        </Modal>\n        </>\n    );\n};\n\nexport default DataGrid;","/opt/lampp/htdocs/my-app/src/utils.js",["269"],"import React, { useState, useEffect, useRef } from 'react';\n\n// Hook\nexport const useDebounce = (value, delay) => {\n    // State and setters for debounced value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(\n        () => {\n            // Update debounced value after delay\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n\n            // Cancel the timeout if value changes (also on delay change or unmount)\n            // This is how we prevent debounced value from updating if value is changed ...\n            // .. within the delay period. Timeout gets cleared and restarted.\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n        [value, delay] // Only re-call effect if value or delay changes\n    );\n\n    return debouncedValue;\n}\n\nexport const useComponentWillMount = func => {\n    const willMount = useRef(true);\n\n    if (willMount.current) {\n        func();\n    }\n\n    willMount.current = false;\n};\n",["270","271"],"/opt/lampp/htdocs/my-app/src/components/DataGrid/btn-cell-renderer.js",[],"/opt/lampp/htdocs/my-app/src/components/multiple-image-upload/multiple-image-upload.js",["272","273","274","275","276","277","278","279"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../../constants/apiConstants';\nimport { withRouter, Switch, Route, Link } from \"react-router-dom\";\nimport { Service } from '../../services/Service';\n\nclass MultipleImageUpload extends Component {\n\n    fileObj = [];\n    fileArray = [];\n    fileArrayUrl = [];\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            file: [null],\n            files: [],\n            successMessage: '',\n            input: {},\n            formData: {},\n            errors: {}\n        }\n        this.uploadMultipleFiles = this.uploadMultipleFiles.bind(this)\n        this.uploadFiles = this.uploadFiles.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        //this.handleSubmitChange = this.handleSubmitChange.bind(this)\n    }\n\n    imageValidate() {\n        let input = this.state.input;\n        let errors = {};\n        let isValid = true;\n        //debugger\n        if (!input[\"fileName\"]) {\n          isValid = false;\n          errors[\"fileName\"] = \"Please select image.\";\n        }\n    \n        if (typeof input[\"fileName\"] !== \"undefined\") {\n          //debugger\n          let imageSize = input[\"fileName\"].size;\n          if (!input[\"fileName\"].name.match(/\\.(jpg|jpeg|png|gif)$/)) {\n            isValid = false;\n            errors[\"fileName\"] = \"Please select valid image(like jpg|jpeg|png|gif).\";\n          } else if (imageSize > 1048576) {\n            isValid = false;\n    \n            errors[\"fileName\"] = \"Image size less than 1 MB.\";\n          }\n        }\n    \n        this.setState({\n          errors: errors\n        });\n    \n        return isValid;\n      }\n\n    uploadMultipleFiles(e) {\n        this.fileArray = [];\n        this.fileArrayUrl = [];\n        let input = this.state.input;\n        let errors = this.state.errors;\n        input['fileName'] = e.target.files[0];\n        this.setState({\n        input\n        });\n        this.fileObj.push(e.target.files)\n        \n        if (e.target.files.length != 0) {\n            for (let i = 0; i < this.fileObj.length; i++) {\n                this.fileArrayUrl.push(URL.createObjectURL(this.fileObj[i][0]))\n                this.fileArray.push(this.fileObj[i][0])  \n                \n                for (let j = 0; j < this.fileObj[i].length; j++) {\n                     //console.log(this.fileObj[i][j])\n                     this.fileArray.push(this.fileObj[i][j])\n                }\n            }\n            this.setState({ file: this.fileArray })        \n        }\n    }\n\n    uploadFiles(e) {\n        e.preventDefault()\n        console.log(this.state.file)\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.imageValidate()) {\n        let self = this;\n        document.getElementById('file').value = null;\n        let image_value = document.getElementById('file').value;\n        \n        let data = this.state.file;\n        // Create an object of formData\n        const formData = new FormData();\n        for (let i = 0; i < data.length; i++) {\n            //Update the formData object\n            formData.append(\"fileName[]\", data[i]);\n        }\n\n        let header = {\n            \"Content-Type\": \"multipart/form-data\",\n            \"Access-Control-Allow-Origin\": \"*\",\n        };\n        \n        //  Service.post({\n        //     url: 'api/multiple-image-upload',\n        //     body: formData,\n        //     header : header\n        //   })\n        //   .then(response => {\n        //       console.log(response)\n        //     let data = response;\n        //       if(data) {\n        //         self.setState({ successMessage: 'Images successful Add...' });\n        //         console.log(self.state.successMessage)\n        //       }  \n        //   })\n        //   .catch(err => {\n        //      //console.log(err)\n        //   });\n\n        axios.post(API_BASE_URL + 'api/multiple-image-upload', formData)\n            .then(function (response) {\n                console.log(response)\n                if (response.status === 200) {\n                    self.setState({ 'successMessage': 'Images successful Add...' });\n                    //self.handleClickEmp();\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n  }\n\n    render() {\n        return (<>\n             {(this.state.successMessage)?<div className=\"alert alert-success\" role=\"alert\">{this.state.successMessage}</div>:''}\n            <form onSubmit={this.handleSubmit} encType=\"multipart/form-data\">\n                <div className=\"form-group multi-preview\">\n                    {(this.fileArrayUrl || []).map(url => (\n                        <img key={url} src={url} alt=\"...\" style={{ height: 70, width: 70 }} />\n                    ))}\n                </div>\n\n                <div className=\"form-group\">\n                    <input type=\"file\" id=\"file\" className=\"form-control\" name=\"fileName[]\" onClick={(event) => { event.target.files = null }} onChange={this.uploadMultipleFiles} multiple />\n                </div>\n                <div className=\"text-danger\">{this.state.errors.fileName}\n              </div>\n                <button type=\"submit\" className=\"btn btn-danger btn-block\" >Upload</button>\n            </form >\n        </>\n        )\n    }\n}\nexport default withRouter(MultipleImageUpload);","/opt/lampp/htdocs/my-app/src/services/Service.js",["280","281","282","283","284"],"import { API_BASE_URL,ACCESS_TOKEN_NAME } from '../constants/apiConstants';\r\n const BASE_URL = 'http://localhost:8000/';\r\n\r\n\r\nconst Service = {\r\n    get: (param) => {\r\n\r\n        let header = {\r\n            \"content-type\": \"application/json\",\r\n            \"accept\": \"application/json\"\r\n        };\r\n\r\n        let token_base64 = localStorage.getItem(ACCESS_TOKEN_NAME);\r\n        if(token_base64.length > 5 || token_base64!=null || token_base64!=undefined ) {\r\n        let token = atob(token_base64);\r\n          if(token) {\r\n            header[\"x-access-token\"] = token;\r\n            header['Authorization'] = `Bearer ${token}`;\r\n         }\r\n        }\r\n\r\n        return fetch(BASE_URL + param.url, {\r\n            method: \"GET\",\r\n            headers: header\r\n        })\r\n        .then(\r\n            response => response.json(),\r\n            error => {\r\n                throw new Error(error)\r\n            }\r\n        );\r\n    },\r\n    post: (param) => {\r\n            let header = {\r\n                \"content-type\": \"application/json\",\r\n                \"accept\": \"application/json\"\r\n            };\r\n    \r\n            let token_base64= localStorage.getItem(ACCESS_TOKEN_NAME);\r\n            if(token_base64.length > 5 || token_base64!=null || token_base64!=undefined ) {\r\n            let token = atob(token_base64);\r\n              if(token) {\r\n                header[\"x-access-token\"] = token;\r\n                header['Authorization'] = `Bearer ${token}`;\r\n             }\r\n           }\r\n        \r\n        return fetch(BASE_URL + param.url, {\r\n            method: \"POST\",\r\n            headers: header,\r\n            //headers:param.header,\r\n            body: param.body\r\n        })\r\n        .then(response => response.json())\r\n    },\r\n\r\n    put: (param) => {\r\n        let header = {\r\n            \"content-type\": \"application/json\",\r\n            \"accept\": \"application/json\"\r\n        };\r\n\r\n        let token_base64= localStorage.getItem(ACCESS_TOKEN_NAME);\r\n        if(token_base64.length > 5 || token_base64!=null || token_base64!=undefined ) {\r\n        let token = atob(token_base64);\r\n          if(token) {\r\n            header[\"x-access-token\"] = token;\r\n            header['Authorization'] = `Bearer ${token}`;\r\n         }\r\n        }\r\n\r\n        return fetch(BASE_URL + param.url, {\r\n            method: \"PUT\",\r\n            headers: header,\r\n            //headers:param.header,\r\n            body: param.body\r\n        })\r\n        .then(response => response.json())\r\n    },\r\n\r\n    delete: (param) => {\r\n\r\n        let header = {\r\n            \"content-type\": \"application/json\",\r\n            \"accept\": \"application/json\"\r\n        };\r\n        \r\n        let token_base64= localStorage.getItem(ACCESS_TOKEN_NAME);\r\n        if(token_base64.length > 5 || token_base64!=null || token_base64!=undefined ) {\r\n        let token = atob(token_base64);\r\n          if(token) {\r\n            header[\"x-access-token\"] = token;\r\n            header['Authorization'] = `Bearer ${token}`;\r\n         }\r\n        }\r\n\r\n        return fetch(BASE_URL + param.url, {\r\n            method: \"DELETE\",\r\n            headers: header\r\n        })\r\n        .then(\r\n            response => response.json(),\r\n            error => {\r\n                throw new Error(error)\r\n            }\r\n        );\r\n    },\r\n\r\n    getImage(image) {\r\n        return BASE_URL + '/' + image;\r\n    }\r\n};\r\n\r\nconst Storage = {\r\n    isLogedin: (param) => {  \r\n        return localStorage.getItem('token') !== null;\r\n    },\r\n    set: (key, value) => {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    },\r\n    get: (key, value) => {\r\n        return JSON.parse(localStorage.getItem(key));\r\n    },\r\n    setString: (key, value) => {\r\n        localStorage.setItem(key, value);\r\n    },\r\n    logout: () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('auth');\r\n    }\r\n};\r\n\r\nexport {Service, Storage};\r\n","/opt/lampp/htdocs/my-app/src/components/ReduxReact/ReduxReact.js",["285"],"import React, {useState} from 'react';\nimport { withRouter } from \"react-router-dom\"; \nimport Footer from '../Footer'; \nimport AddTodo from '../../containers/AddTodo';  \nimport VisibleTodoList from '../../containers/VisibleTodoList';  \n\n\n\nfunction ReduxReact(props) {\n    return(<div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\" id=\"root\">\n        <AddTodo />   \n       <VisibleTodoList />  \n       <Footer />  \n    </div>\n    )\n}\nexport default withRouter(ReduxReact);","/opt/lampp/htdocs/my-app/src/components/Footer.js",[],"/opt/lampp/htdocs/my-app/src/containers/AddTodo.js",[],"/opt/lampp/htdocs/my-app/src/containers/VisibleTodoList.js",[],"/opt/lampp/htdocs/my-app/src/components/TodoList.js",[],"/opt/lampp/htdocs/my-app/src/components/Todo.js",[],"/opt/lampp/htdocs/my-app/src/containers/FilterLink.js",[],"/opt/lampp/htdocs/my-app/src/components/Link.js",["286"],"import React from 'react'  \nimport PropTypes from 'prop-types'  \n  \nconst Link = ({ active, children, onClick }) => {  \n  if (active) {  \n    return <span>{children}</span>  \n  }  \n  \n  return (  \n    <a  \n      href=\"\"  \n      onClick={e => {  \n        e.preventDefault()  \n        onClick()  \n      }}  \n    >  \n      {children}  \n    </a>  \n  )  \n}  \n  \nLink.propTypes = {  \n  active: PropTypes.bool.isRequired,  \n  children: PropTypes.node.isRequired,  \n  onClick: PropTypes.func.isRequired  \n}  \n  \nexport default Link  ","/opt/lampp/htdocs/my-app/src/actions/ index.js",[],"/opt/lampp/htdocs/my-app/src/actions/Index.spec.js",[],"/opt/lampp/htdocs/my-app/src/Store/index.js",["287"],"/opt/lampp/htdocs/my-app/src/reducers/index.js",[],["288","289"],"/opt/lampp/htdocs/my-app/src/reducers/Todos.js",[],"/opt/lampp/htdocs/my-app/src/reducers/VisibilityFilter.js",[],"/opt/lampp/htdocs/my-app/src/Counter.js",[],{"ruleId":"290","severity":1,"message":"291","line":6,"column":8,"nodeType":"292","messageId":"293","endLine":6,"endColumn":15},{"ruleId":"290","severity":1,"message":"294","line":9,"column":10,"nodeType":"292","messageId":"293","endLine":9,"endColumn":18},{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","replacedBy":"298"},{"ruleId":"290","severity":1,"message":"299","line":17,"column":8,"nodeType":"292","messageId":"293","endLine":17,"endColumn":18},{"ruleId":"295","replacedBy":"300"},{"ruleId":"297","replacedBy":"301"},{"ruleId":"290","severity":1,"message":"302","line":2,"column":8,"nodeType":"292","messageId":"293","endLine":2,"endColumn":13},{"ruleId":"290","severity":1,"message":"303","line":3,"column":34,"nodeType":"292","messageId":"293","endLine":3,"endColumn":40},{"ruleId":"290","severity":1,"message":"304","line":3,"column":41,"nodeType":"292","messageId":"293","endLine":3,"endColumn":46},{"ruleId":"290","severity":1,"message":"305","line":3,"column":47,"nodeType":"292","messageId":"293","endLine":3,"endColumn":56},{"ruleId":"290","severity":1,"message":"306","line":4,"column":10,"nodeType":"292","messageId":"293","endLine":4,"endColumn":22},{"ruleId":"290","severity":1,"message":"307","line":5,"column":21,"nodeType":"292","messageId":"293","endLine":5,"endColumn":32},{"ruleId":"290","severity":1,"message":"308","line":5,"column":33,"nodeType":"292","messageId":"293","endLine":5,"endColumn":37},{"ruleId":"290","severity":1,"message":"309","line":5,"column":38,"nodeType":"292","messageId":"293","endLine":5,"endColumn":49},{"ruleId":"290","severity":1,"message":"310","line":5,"column":50,"nodeType":"292","messageId":"293","endLine":5,"endColumn":56},{"ruleId":"290","severity":1,"message":"311","line":19,"column":9,"nodeType":"292","messageId":"293","endLine":19,"endColumn":14},{"ruleId":"312","severity":1,"message":"313","line":44,"column":10,"nodeType":"314","endLine":44,"endColumn":12,"suggestions":"315"},{"ruleId":"316","severity":1,"message":"317","line":56,"column":27,"nodeType":"318","messageId":"319","endLine":56,"endColumn":29},{"ruleId":"316","severity":1,"message":"320","line":112,"column":90,"nodeType":"318","messageId":"319","endLine":112,"endColumn":92},{"ruleId":"290","severity":1,"message":"302","line":2,"column":8,"nodeType":"292","messageId":"293","endLine":2,"endColumn":13},{"ruleId":"290","severity":1,"message":"306","line":4,"column":9,"nodeType":"292","messageId":"293","endLine":4,"endColumn":21},{"ruleId":"290","severity":1,"message":"321","line":26,"column":15,"nodeType":"292","messageId":"293","endLine":26,"endColumn":22},{"ruleId":"290","severity":1,"message":"302","line":2,"column":8,"nodeType":"292","messageId":"293","endLine":2,"endColumn":13},{"ruleId":"290","severity":1,"message":"306","line":5,"column":9,"nodeType":"292","messageId":"293","endLine":5,"endColumn":21},{"ruleId":"290","severity":1,"message":"321","line":33,"column":19,"nodeType":"292","messageId":"293","endLine":33,"endColumn":26},{"ruleId":"290","severity":1,"message":"302","line":2,"column":8,"nodeType":"292","messageId":"293","endLine":2,"endColumn":13},{"ruleId":"290","severity":1,"message":"306","line":3,"column":9,"nodeType":"292","messageId":"293","endLine":3,"endColumn":21},{"ruleId":"290","severity":1,"message":"322","line":4,"column":36,"nodeType":"292","messageId":"293","endLine":4,"endColumn":40},{"ruleId":"290","severity":1,"message":"323","line":4,"column":41,"nodeType":"292","messageId":"293","endLine":4,"endColumn":49},{"ruleId":"290","severity":1,"message":"324","line":6,"column":10,"nodeType":"292","messageId":"293","endLine":6,"endColumn":16},{"ruleId":"290","severity":1,"message":"325","line":6,"column":17,"nodeType":"292","messageId":"293","endLine":6,"endColumn":31},{"ruleId":"290","severity":1,"message":"326","line":62,"column":17,"nodeType":"292","messageId":"293","endLine":62,"endColumn":24},{"ruleId":"290","severity":1,"message":"326","line":67,"column":17,"nodeType":"292","messageId":"293","endLine":67,"endColumn":24},{"ruleId":"290","severity":1,"message":"326","line":72,"column":17,"nodeType":"292","messageId":"293","endLine":72,"endColumn":24},{"ruleId":"316","severity":1,"message":"320","line":76,"column":30,"nodeType":"318","messageId":"319","endLine":76,"endColumn":32},{"ruleId":"327","severity":1,"message":"328","line":77,"column":17,"nodeType":"329","endLine":77,"endColumn":28},{"ruleId":"316","severity":1,"message":"320","line":78,"column":26,"nodeType":"318","messageId":"319","endLine":78,"endColumn":28},{"ruleId":"316","severity":1,"message":"320","line":79,"column":26,"nodeType":"318","messageId":"319","endLine":79,"endColumn":28},{"ruleId":"316","severity":1,"message":"320","line":80,"column":26,"nodeType":"318","messageId":"319","endLine":80,"endColumn":28},{"ruleId":"290","severity":1,"message":"303","line":4,"column":22,"nodeType":"292","messageId":"293","endLine":4,"endColumn":28},{"ruleId":"290","severity":1,"message":"304","line":4,"column":30,"nodeType":"292","messageId":"293","endLine":4,"endColumn":35},{"ruleId":"290","severity":1,"message":"322","line":4,"column":37,"nodeType":"292","messageId":"293","endLine":4,"endColumn":41},{"ruleId":"290","severity":1,"message":"324","line":7,"column":10,"nodeType":"292","messageId":"293","endLine":7,"endColumn":16},{"ruleId":"290","severity":1,"message":"325","line":7,"column":18,"nodeType":"292","messageId":"293","endLine":7,"endColumn":32},{"ruleId":"330","severity":1,"message":"331","line":50,"column":11,"nodeType":"332","endLine":50,"endColumn":21},{"ruleId":"330","severity":1,"message":"331","line":52,"column":11,"nodeType":"332","endLine":52,"endColumn":21},{"ruleId":"290","severity":1,"message":"326","line":136,"column":13,"nodeType":"292","messageId":"293","endLine":136,"endColumn":20},{"ruleId":"333","severity":1,"message":"334","line":173,"column":11,"nodeType":"292","messageId":"335","endLine":173,"endColumn":18},{"ruleId":"333","severity":1,"message":"334","line":188,"column":11,"nodeType":"292","messageId":"335","endLine":188,"endColumn":18},{"ruleId":"333","severity":1,"message":"334","line":202,"column":11,"nodeType":"292","messageId":"335","endLine":202,"endColumn":18},{"ruleId":"290","severity":1,"message":"336","line":293,"column":9,"nodeType":"292","messageId":"293","endLine":293,"endColumn":15},{"ruleId":"290","severity":1,"message":"336","line":349,"column":13,"nodeType":"292","messageId":"293","endLine":349,"endColumn":19},{"ruleId":"290","severity":1,"message":"326","line":350,"column":13,"nodeType":"292","messageId":"293","endLine":350,"endColumn":20},{"ruleId":"290","severity":1,"message":"302","line":2,"column":8,"nodeType":"292","messageId":"293","endLine":2,"endColumn":13},{"ruleId":"290","severity":1,"message":"306","line":3,"column":9,"nodeType":"292","messageId":"293","endLine":3,"endColumn":21},{"ruleId":"290","severity":1,"message":"303","line":4,"column":21,"nodeType":"292","messageId":"293","endLine":4,"endColumn":27},{"ruleId":"290","severity":1,"message":"304","line":4,"column":29,"nodeType":"292","messageId":"293","endLine":4,"endColumn":34},{"ruleId":"290","severity":1,"message":"322","line":4,"column":36,"nodeType":"292","messageId":"293","endLine":4,"endColumn":40},{"ruleId":"290","severity":1,"message":"308","line":5,"column":10,"nodeType":"292","messageId":"293","endLine":5,"endColumn":14},{"ruleId":"290","severity":1,"message":"337","line":5,"column":16,"nodeType":"292","messageId":"293","endLine":5,"endColumn":21},{"ruleId":"290","severity":1,"message":"338","line":5,"column":23,"nodeType":"292","messageId":"293","endLine":5,"endColumn":29},{"ruleId":"290","severity":1,"message":"310","line":5,"column":31,"nodeType":"292","messageId":"293","endLine":5,"endColumn":37},{"ruleId":"290","severity":1,"message":"339","line":5,"column":39,"nodeType":"292","messageId":"293","endLine":5,"endColumn":46},{"ruleId":"290","severity":1,"message":"340","line":5,"column":48,"nodeType":"292","messageId":"293","endLine":5,"endColumn":51},{"ruleId":"290","severity":1,"message":"341","line":5,"column":53,"nodeType":"292","messageId":"293","endLine":5,"endColumn":56},{"ruleId":"290","severity":1,"message":"342","line":5,"column":58,"nodeType":"292","messageId":"293","endLine":5,"endColumn":63},{"ruleId":"290","severity":1,"message":"324","line":7,"column":10,"nodeType":"292","messageId":"293","endLine":7,"endColumn":16},{"ruleId":"290","severity":1,"message":"325","line":7,"column":17,"nodeType":"292","messageId":"293","endLine":7,"endColumn":31},{"ruleId":"290","severity":1,"message":"343","line":38,"column":13,"nodeType":"292","messageId":"293","endLine":38,"endColumn":24},{"ruleId":"330","severity":1,"message":"331","line":39,"column":9,"nodeType":"332","endLine":39,"endColumn":19},{"ruleId":"290","severity":1,"message":"326","line":121,"column":17,"nodeType":"292","messageId":"293","endLine":121,"endColumn":24},{"ruleId":"333","severity":1,"message":"334","line":156,"column":17,"nodeType":"292","messageId":"335","endLine":156,"endColumn":24},{"ruleId":"333","severity":1,"message":"334","line":171,"column":15,"nodeType":"292","messageId":"335","endLine":171,"endColumn":22},{"ruleId":"333","severity":1,"message":"334","line":185,"column":15,"nodeType":"292","messageId":"335","endLine":185,"endColumn":22},{"ruleId":"316","severity":1,"message":"320","line":189,"column":50,"nodeType":"318","messageId":"319","endLine":189,"endColumn":52},{"ruleId":"290","severity":1,"message":"336","line":207,"column":23,"nodeType":"292","messageId":"293","endLine":207,"endColumn":29},{"ruleId":"290","severity":1,"message":"326","line":208,"column":13,"nodeType":"292","messageId":"293","endLine":208,"endColumn":20},{"ruleId":"290","severity":1,"message":"344","line":1,"column":26,"nodeType":"292","messageId":"293","endLine":1,"endColumn":35},{"ruleId":"290","severity":1,"message":"302","line":2,"column":8,"nodeType":"292","messageId":"293","endLine":2,"endColumn":13},{"ruleId":"290","severity":1,"message":"306","line":11,"column":9,"nodeType":"292","messageId":"293","endLine":11,"endColumn":21},{"ruleId":"290","severity":1,"message":"337","line":12,"column":40,"nodeType":"292","messageId":"293","endLine":12,"endColumn":45},{"ruleId":"290","severity":1,"message":"345","line":16,"column":12,"nodeType":"292","messageId":"293","endLine":16,"endColumn":25},{"ruleId":"290","severity":1,"message":"346","line":18,"column":12,"nodeType":"292","messageId":"293","endLine":18,"endColumn":21},{"ruleId":"290","severity":1,"message":"347","line":18,"column":23,"nodeType":"292","messageId":"293","endLine":18,"endColumn":35},{"ruleId":"290","severity":1,"message":"348","line":40,"column":12,"nodeType":"292","messageId":"293","endLine":40,"endColumn":16},{"ruleId":"290","severity":1,"message":"349","line":43,"column":15,"nodeType":"292","messageId":"293","endLine":43,"endColumn":45},{"ruleId":"350","severity":1,"message":"351","line":43,"column":79,"nodeType":"352","messageId":"353","endLine":43,"endColumn":81},{"ruleId":"290","severity":1,"message":"348","line":65,"column":9,"nodeType":"292","messageId":"293","endLine":65,"endColumn":13},{"ruleId":"290","severity":1,"message":"354","line":78,"column":11,"nodeType":"292","messageId":"293","endLine":78,"endColumn":17},{"ruleId":"290","severity":1,"message":"348","line":148,"column":13,"nodeType":"292","messageId":"293","endLine":148,"endColumn":17},{"ruleId":"290","severity":1,"message":"349","line":151,"column":15,"nodeType":"292","messageId":"293","endLine":151,"endColumn":45},{"ruleId":"350","severity":1,"message":"351","line":151,"column":79,"nodeType":"352","messageId":"353","endLine":151,"endColumn":81},{"ruleId":"290","severity":1,"message":"355","line":1,"column":8,"nodeType":"292","messageId":"293","endLine":1,"endColumn":13},{"ruleId":"295","replacedBy":"356"},{"ruleId":"297","replacedBy":"357"},{"ruleId":"290","severity":1,"message":"303","line":4,"column":22,"nodeType":"292","messageId":"293","endLine":4,"endColumn":28},{"ruleId":"290","severity":1,"message":"304","line":4,"column":30,"nodeType":"292","messageId":"293","endLine":4,"endColumn":35},{"ruleId":"290","severity":1,"message":"322","line":4,"column":37,"nodeType":"292","messageId":"293","endLine":4,"endColumn":41},{"ruleId":"290","severity":1,"message":"358","line":5,"column":10,"nodeType":"292","messageId":"293","endLine":5,"endColumn":17},{"ruleId":"290","severity":1,"message":"336","line":63,"column":13,"nodeType":"292","messageId":"293","endLine":63,"endColumn":19},{"ruleId":"316","severity":1,"message":"320","line":70,"column":35,"nodeType":"318","messageId":"319","endLine":70,"endColumn":37},{"ruleId":"290","severity":1,"message":"359","line":94,"column":13,"nodeType":"292","messageId":"293","endLine":94,"endColumn":24},{"ruleId":"290","severity":1,"message":"354","line":104,"column":13,"nodeType":"292","messageId":"293","endLine":104,"endColumn":19},{"ruleId":"290","severity":1,"message":"306","line":1,"column":10,"nodeType":"292","messageId":"293","endLine":1,"endColumn":22},{"ruleId":"316","severity":1,"message":"320","line":14,"column":73,"nodeType":"318","messageId":"319","endLine":14,"endColumn":75},{"ruleId":"316","severity":1,"message":"320","line":40,"column":77,"nodeType":"318","messageId":"319","endLine":40,"endColumn":79},{"ruleId":"316","severity":1,"message":"320","line":64,"column":73,"nodeType":"318","messageId":"319","endLine":64,"endColumn":75},{"ruleId":"316","severity":1,"message":"320","line":89,"column":73,"nodeType":"318","messageId":"319","endLine":89,"endColumn":75},{"ruleId":"290","severity":1,"message":"360","line":1,"column":16,"nodeType":"292","messageId":"293","endLine":1,"endColumn":24},{"ruleId":"361","severity":1,"message":"362","line":10,"column":5,"nodeType":"363","endLine":16,"endColumn":6},{"ruleId":"290","severity":1,"message":"364","line":6,"column":10,"nodeType":"292","messageId":"293","endLine":6,"endColumn":17},{"ruleId":"295","replacedBy":"365"},{"ruleId":"297","replacedBy":"366"},"no-unused-vars","'Counter' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","no-native-reassign",["367"],"no-negated-in-lhs",["368"],"'ReduxReact' is defined but never used.",["367"],["368"],"'axios' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useParams' is defined but never used.","'API_BASE_URL' is defined but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'title' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLocalTodo'. Either include it or remove the dependency array.","ArrayExpression",["369"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'payload' is assigned a value but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'Router' is defined but never used.","'browserHistory' is defined but never used.","'history' is assigned a value but never used.","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-redeclare","'pattern' is already defined.","redeclared","'errors' is assigned a value but never used.","'Input' is defined but never used.","'Result' is defined but never used.","'Popover' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Image' is defined but never used.","'employeeIds' is assigned a value but never used.","'useEffect' is defined but never used.","'gridColumnApi' is assigned a value but never used.","'employees' is assigned a value but never used.","'setEmployees' is assigned a value but never used.","'self' is assigned a value but never used.","'selectedDataStringPresentation' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'header' is assigned a value but never used.","'React' is defined but never used.",["367"],["368"],"'Service' is defined but never used.","'image_value' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'connect' is defined but never used.",["367"],["368"],"no-global-assign","no-unsafe-negation",{"desc":"370","fix":"371"},"Update the dependencies array to be: [getLocalTodo]",{"range":"372","text":"373"},[1452,1454],"[getLocalTodo]"]